<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://mjafar.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mjafar.me/" rel="alternate" type="text/html" /><updated>2020-10-04T03:10:44+00:00</updated><id>https://mjafar.me/feed.xml</id><title type="html">Mohammad Jafar Mashhadi</title><subtitle>My portfolio website I guess?</subtitle><entry><title type="html">MSc thesis: Black-box Behavioral Model Inference for Autopilot Software Systems</title><link href="https://mjafar.me/publications/UCalgary-graduate-thesis.html" rel="alternate" type="text/html" title="MSc thesis: Black-box Behavioral Model Inference for Autopilot Software Systems" /><published>2020-09-10T15:00:00+00:00</published><updated>2020-09-10T15:00:00+00:00</updated><id>https://mjafar.me/publications/UCalgary-graduate-thesis</id><content type="html" xml:base="https://mjafar.me/publications/UCalgary-graduate-thesis.html">&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Inferring behavior model of a running software system is quite useful for several automated software engineering tasks, such as program comprehension, anomaly detection, and testing. Most existing dynamic model inference techniques are white-box, i.e. they require source code to be instrumented to get run-time traces. However, in many systems, instrumenting the entire source code is not possible (e.g., when using black-box third-party libraries) or might be very costly. 
Unfortunately, most black-box techniques that detect states over time are either univariate, or make assumptions on the data distribution, or have limited power for learning over a long period of past behavior. 
To overcome the above issues, in this thesis, I proposed a hybrid deep neural network that accepts as input a set of time series, one per input/output signal of the system, and applies a set of convolutional and recurrent layers to learn the non-linear correlations between signals and the patterns, over time. 
I have applied this approach on two real UAV autopilot case studies: one from our industry partner, MicroPilot (MP in short), with half a million lines of C code, and one widely used open source solution: Paparazzi. 
I ran more than 1200 system-level tests in total (to generate the input data) and inferred the system’s internal state, over time.
In case of Paparazzi, as it did not include system tests like MP, I created a tool that generates and executes meaningful test scenarios.
Comparison with several traditional time series change point detection techniques showed that this approach improves their performance by up to 102% in MP’s case and 94% in Paparazzi’s, in terms of finding state change points, measured by F1 score. I also showed that this state classification algorithm provides on average 90.45% F1 score for MP and 82.23% for Paparazzi, which improves traditional classification algorithms by up to 17% in MP’s case and 20% in Paparazzi’s.&lt;/p&gt;

&lt;p&gt;In addition, by creating a hyper-parameter tuning pipeline using grid search technique, despite having a way smaller training set in the second case study (7 times smaller compared to the first one), I managed to get a better performance, up to 48% better, out of the neural network model as measured by 8 metrics.
The tuning performance is compared to using the same hyper-parameters that worked for MP’s case, for Paparazzi.&lt;/p&gt;

&lt;h2 id=&quot;related-projects&quot;&gt;Related Projects&lt;/h2&gt;
&lt;h3 id=&quot;hybrid-net&quot;&gt;&lt;a href=&quot;/projects/#inferring-state-models-from-black-box-software-using-hybrid-deep-neural-networks&quot;&gt;Hybrid-net&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The main repository containing the whole learning pipeline. The code is in Python using Keras on Tensor Flow.
&lt;a href=&quot;https://github.com/sea-lab/hybrid-net&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;paparzzi-tester&quot;&gt;&lt;a href=&quot;/projects/#paparzzi-tester&quot;&gt;Paparzzi Tester&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;:airplane:️ A fuzz testing tool for generating and performing system tests for Paparazzi auto pilot
&lt;a href=&quot;https://github.com/MJafarMashhadi/pprz_tester&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;paparazzi&quot;&gt;Paparazzi&lt;/h3&gt;
&lt;p&gt;I contributed code to Paparazzi autopilot: a free and open-source hardware and software project for unmanned (air) vehicles.
&lt;a href=&quot;https://github.com/MJafarMashhadi/paparazzi&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;pprzlink&quot;&gt;pprzlink&lt;/h3&gt;
&lt;p&gt;I contributed code and documentation to pprzlink: Message and communication library for the Paparazzi UAV system
&lt;a href=&quot;https://github.com/MJafarMashhadi/pprzlink&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;presentation-slides&quot;&gt;Presentation Slides&lt;/h2&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/KYetgcTa9ummEU&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;</content><author><name></name></author><category term="publication" /><category term="publication" /><category term="deep learning" /><category term="software engineering" /><category term="thesis" /><summary type="html">Abstract Inferring behavior model of a running software system is quite useful for several automated software engineering tasks, such as program comprehension, anomaly detection, and testing. Most existing dynamic model inference techniques are white-box, i.e. they require source code to be instrumented to get run-time traces. However, in many systems, instrumenting the entire source code is not possible (e.g., when using black-box third-party libraries) or might be very costly. Unfortunately, most black-box techniques that detect states over time are either univariate, or make assumptions on the data distribution, or have limited power for learning over a long period of past behavior. To overcome the above issues, in this thesis, I proposed a hybrid deep neural network that accepts as input a set of time series, one per input/output signal of the system, and applies a set of convolutional and recurrent layers to learn the non-linear correlations between signals and the patterns, over time. I have applied this approach on two real UAV autopilot case studies: one from our industry partner, MicroPilot (MP in short), with half a million lines of C code, and one widely used open source solution: Paparazzi. I ran more than 1200 system-level tests in total (to generate the input data) and inferred the system’s internal state, over time. In case of Paparazzi, as it did not include system tests like MP, I created a tool that generates and executes meaningful test scenarios. Comparison with several traditional time series change point detection techniques showed that this approach improves their performance by up to 102% in MP’s case and 94% in Paparazzi’s, in terms of finding state change points, measured by F1 score. I also showed that this state classification algorithm provides on average 90.45% F1 score for MP and 82.23% for Paparazzi, which improves traditional classification algorithms by up to 17% in MP’s case and 20% in Paparazzi’s.</summary></entry><entry><title type="html">Hybrid Deep Neural Networks to Infer State Models of Black-Box Systems</title><link href="https://mjafar.me/publications/ASE-2020-deep-neural-net-autopilot-behvaioural-modeling.html" rel="alternate" type="text/html" title="Hybrid Deep Neural Networks to Infer State Models of Black-Box Systems" /><published>2020-08-22T17:10:00+00:00</published><updated>2020-08-22T17:10:00+00:00</updated><id>https://mjafar.me/publications/ASE-2020-deep-neural-net-autopilot-behvaioural-modeling</id><content type="html" xml:base="https://mjafar.me/publications/ASE-2020-deep-neural-net-autopilot-behvaioural-modeling.html">&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Inferring behavior model of a running software system is quite useful for several automated software engineering tasks
such as program comprehension, anomaly detection, and testing. Most existing dynamic model inference techniques are
white-box, i.e., they require source code to be instrumented to get run-time traces. However, in many systems,
instrumenting the entire source code is not possible (e.g. when using black-box third-party libraries) or might be very
costly. Unfortunately, most black-box techniques that detect states over time are either univariate, or make assumptions
on the data distribution, or have limited power for learning over a long period of past behavior. To overcome the above
issues, in this paper, we propose a hybrid deep neural network that accepts as input a set of time series, one per
input/output signal of the system, and applies a set of convolutional and recurrent layers to learn the non-linear
correlations between signals and the patterns, over time. We have applied our approach on a real UAV auto-pilot solution
from our industry partner with half a million lines of C code. We ran 888 random recent system-level test cases and
inferred states, over time. Our comparison with several traditional time series change point detection techniques showed
that our approach improves their performance by up to 102%, in terms of finding state change points, measured by F1 score.
We also showed that our state classification algorithm provides on average 90.45% F1 score, which improves traditional
classification algorithms by up to 17%.&lt;/p&gt;

&lt;h2 id=&quot;presentation-slides&quot;&gt;Presentation Slides&lt;/h2&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/8ndk4DlWsgRUC0&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;</content><author><name></name></author><category term="publication" /><category term="publication" /><category term="deep learning" /><category term="software engineering" /><summary type="html">Abstract Inferring behavior model of a running software system is quite useful for several automated software engineering tasks such as program comprehension, anomaly detection, and testing. Most existing dynamic model inference techniques are white-box, i.e., they require source code to be instrumented to get run-time traces. However, in many systems, instrumenting the entire source code is not possible (e.g. when using black-box third-party libraries) or might be very costly. Unfortunately, most black-box techniques that detect states over time are either univariate, or make assumptions on the data distribution, or have limited power for learning over a long period of past behavior. To overcome the above issues, in this paper, we propose a hybrid deep neural network that accepts as input a set of time series, one per input/output signal of the system, and applies a set of convolutional and recurrent layers to learn the non-linear correlations between signals and the patterns, over time. We have applied our approach on a real UAV auto-pilot solution from our industry partner with half a million lines of C code. We ran 888 random recent system-level test cases and inferred states, over time. Our comparison with several traditional time series change point detection techniques showed that our approach improves their performance by up to 102%, in terms of finding state change points, measured by F1 score. We also showed that our state classification algorithm provides on average 90.45% F1 score, which improves traditional classification algorithms by up to 17%.</summary></entry><entry><title type="html">An Empirical Study on Practicality of Specification Mining Algorithms on a Real-world Application</title><link href="https://mjafar.me/publications/ICPC-2019-spec-mining-emperical-study.html" rel="alternate" type="text/html" title="An Empirical Study on Practicality of Specification Mining Algorithms on a Real-world Application" /><published>2019-05-24T17:10:00+00:00</published><updated>2019-05-24T17:10:00+00:00</updated><id>https://mjafar.me/publications/ICPC-2019-spec-mining-emperical-study</id><content type="html" xml:base="https://mjafar.me/publications/ICPC-2019-spec-mining-emperical-study.html">&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Dynamic model inference techniques have been the center of many research projects recently. There are now multiple open 
source implementations of state-of-the-art algorithms, which provide basic abstraction and merging capabilities. Most of 
these tools and algorithms have been developed with one particular application in mind, which is program comprehension.
The output models can abstract away the details of the program and represent the software behaviour in a concise and 
easy to understand form. However, one application context that is less studied is using such inferred models for 
debugging, where the behaviour to abstract is a faulty behaviour (e.g., a set of execution traces including a failed 
test case). We tried to apply some of the existing model inference techniques in a real-world industrial context to 
support program comprehension for debugging. Our initial experiments have shown many limitations both in terms of 
implementation as well as the algorithms. The paper will discuss the root cause of the failures and proposes ideas for 
future improvement.&lt;/p&gt;

&lt;h2 id=&quot;presentation-slides&quot;&gt;Presentation Slides&lt;/h2&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/z5hAbZ8HZfihvr&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;</content><author><name></name></author><category term="publication" /><category term="publication" /><category term="software engineering" /><summary type="html">Abstract Dynamic model inference techniques have been the center of many research projects recently. There are now multiple open source implementations of state-of-the-art algorithms, which provide basic abstraction and merging capabilities. Most of these tools and algorithms have been developed with one particular application in mind, which is program comprehension. The output models can abstract away the details of the program and represent the software behaviour in a concise and easy to understand form. However, one application context that is less studied is using such inferred models for debugging, where the behaviour to abstract is a faulty behaviour (e.g., a set of execution traces including a failed test case). We tried to apply some of the existing model inference techniques in a real-world industrial context to support program comprehension for debugging. Our initial experiments have shown many limitations both in terms of implementation as well as the algorithms. The paper will discuss the root cause of the failures and proposes ideas for future improvement.</summary></entry><entry><title type="html">Interactive semi-automated specification mining for debugging: An experience report</title><link href="https://mjafar.me/publications/IST-2019-interactive-debugging.html" rel="alternate" type="text/html" title="Interactive semi-automated specification mining for debugging: An experience report" /><published>2019-04-24T17:10:00+00:00</published><updated>2019-04-24T17:10:00+00:00</updated><id>https://mjafar.me/publications/IST-2019-interactive-debugging</id><content type="html" xml:base="https://mjafar.me/publications/IST-2019-interactive-debugging.html">&lt;p&gt;&lt;strong&gt;Also presented at ASE 2019’s &lt;a href=&quot;https://2019.ase-conferences.org/details/ase-2019-Journal-First-Presentations/13/Interactive-semi-automated-specification-mining-for-debugging-An-experience-report&quot;&gt;journal-first presentations track&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;h3 id=&quot;context&quot;&gt;Context&lt;/h3&gt;
&lt;p&gt;Specification mining techniques are typically used to extract the specification of a software in the absence of 
(up-to-date) specification documents. This is useful for program comprehension, testing, and anomaly detection. However, 
specification mining can also potentially be used for debugging, where a faulty behavior is abstracted to give developers 
a context about the bug and help them locating it.&lt;/p&gt;

&lt;h3 id=&quot;objective&quot;&gt;Objective&lt;/h3&gt;
&lt;p&gt;In this project, we investigate this idea in an industrial setting. We propose a very basic semi-automated specification 
mining approach for debugging and apply that on real reported issues from an AutoPilot software system from our industry 
partner, MicroPilot Inc. The objective is to assess the feasibility and usefulness of the approach in a real-world 
setting.&lt;/p&gt;

&lt;h3 id=&quot;method&quot;&gt;Method&lt;/h3&gt;
&lt;p&gt;The approach is developed as a prototype tool, working on C code, which accept a set of relevant state fields and 
functions, per issue, and generates an extended finite state machine that represents the faulty behavior, abstracted 
with respect to the relevant context (the selected fields and functions).&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;
&lt;p&gt;We qualitatively evaluate the approach by a set of interviews (including observational studies) with the company’s 
developers on their real-world reported bugs. The results show that (a) our approach is feasible, (b) it can be
automated to some extent, and (c) brings advantages over only using their code-level debugging tools. We also compared 
this approach with traditional fully automated state-merging algorithms and reported several issues when applying those 
techniques on a real-world debugging context.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The main conclusion of this study is that the idea of an “interactive” specification mining rather than a fully 
automated mining tool is NOT impractical and indeed is useful for the debugging use case.&lt;/p&gt;</content><author><name></name></author><category term="publication" /><category term="publication" /><category term="software engineering" /><summary type="html">Also presented at ASE 2019’s journal-first presentations track.</summary></entry><entry><title type="html">تجربهٔ یک وب‌اپ real time با websocket</title><link href="https://mjafar.me/blog/2018/07/a-realtime-webapp-with-websockets/" rel="alternate" type="text/html" title="تجربهٔ یک وب‌اپ real time با websocket" /><published>2018-07-10T11:03:13+00:00</published><updated>2018-07-10T11:03:13+00:00</updated><id>https://mjafar.me/blog/2018/07/a-realtime-webapp-with-websockets</id><content type="html" xml:base="https://mjafar.me/blog/2018/07/a-realtime-webapp-with-websockets/">&lt;p&gt;قرار بود این نوشته را سه ماه پیش اینجا منتشر کنم اما نیمه‌کاره رهایش کردم چون روی تازگی مطالب وبلاگ کمی وسواس دارم و دوست دارم حرف جدیدی داشته باشد، نه صرفاً یک tutorial. این پیش نویس فراموشم شده بود تا اینکه شرکت از ما خواست که هر ماه یک مطلب فنی مرتبط روی &lt;a href=&quot;http://blog.adak.io/&quot;&gt;وبلاگ شرکت&lt;/a&gt; منتشر کنیم؛ چون این وسواس روی وبلاگ شرکت برایم مطرح نبود سریعاً شروع به نوشتن کردم. الان متوجه شدم که وبلاگ شرکت از دسترس خارج شده و چون اجازهٔ انتشار مطلب در وبلاگ شخصی هم داشتیم مطلبی که نوشته بودم را با پیش‌نویسی که اینجا داشتم ترکیب و منتشر می‌کنم. پیشاپیش از تغییر لحن‌هاینnbsp;(رسمی و عامیانه) احتمالی متن معذرت می‌خوام که نتیجهٔ همین ترکیب شدن متن‌هاست.&lt;/p&gt;

&lt;p&gt;یکی از نیازمندی‌های پنل مدیریتی فروشگاه اینترنتی پادوکس امکان نمایش برخط مکان پیک‌های حامل سفارش‌ها است. پنل مدیریت فروشگاه تحت وب طراحی شده است لذا برای پیاده‌سازی این قابلیت راه‌حل خوبی که به ذهن می‌رسد استفاده از websocket است.&lt;/p&gt;

&lt;p&gt;سوکت یکی از ساده‌ترین راه‌های ارتباطی دو طرفه بین دو پردازه (در یک سیستم یا بین دو سیستم) است. ارتباط از طریق سوکت را می‌توان به چهار عمل اصلیِ اتصال، قطع اتصال، ارسال و دریافت خلاصه کرد. در &lt;a href=&quot;https://www.webnots.com/what-is-http/&quot;&gt;پروتکل HTTP&lt;/a&gt; همیشه آغازگر ارتباط، مشتری (مرورگر و اپ و…) است و سوکتِ بین مشتری و سرور بلافاصله بعد از اتمام ارتباط بسته می‌شود. اگر در زمانی پس از بسته شدن سوکت لازم شود سرور اطلاعاتی را به کاربر بفرستد راهی برای این کار ندارد؛ بنابراین برای برقراری ارتباطِ همزمان (real time) نیاز به سوکتی داریم که باز بماند، پروتکل وب‌سوکت این قابلیت را در مرورگر و سوار شده بر بستر HTTP فراهم می‌کند.&lt;/p&gt;

&lt;p&gt;در این مطلب بررسی کوتاهی بر نحوهٔ پیاده‌سازی و ابزارهای استفاده شده خواهیم داشت.&lt;/p&gt;

&lt;h2 id=&quot;اجزای-سامانه&quot;&gt;اجزای سامانه&lt;/h2&gt;
&lt;h3 id=&quot;api-پیکها&quot;&gt;API پیک‌ها&lt;/h3&gt;
&lt;p&gt;پیک‌ها برای ارسال مختصات جغرافیایی‌شان و سایر اطلاعات مرتبط با ارسال سفارش‌هایشان از طریق یک Rest API با وب‌سرور لجستیک پادوکس در ارتباط هستند. برای پیاده‌سازی این API از ابزار &lt;a href=&quot;http://www.django-rest-framework.org/&quot;&gt;Django REST framework&lt;/a&gt; استفاده کردیم. ارسال موقعیت مکانی از طرف اپلیکیشن پیک‌ها به صورت خودکار انجام می‌شود و فاصلهٔ زمانی دو آپدیت متوالی را سرور به اپ اطلاع می‌دهد. در این جا چون داده‌ای از طرف سرور به اپلیکیشن push نمی‌شود نیازی به استفاده از وب‌سوکت نداشتیم.&lt;/p&gt;
&lt;h3 id=&quot;پنل-مدیریتی--نقشه&quot;&gt;پنل مدیریتی – نقشه&lt;/h3&gt;
&lt;p&gt;برای نمایش نقشه از &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/adding-a-google-map&quot;&gt;API گوگل‌مپ&lt;/a&gt; استفاده کردیم. امکان نمایش تعداد زیادی نشانگر (Marker) روی نقشه و به روز رسانی محل آن‌ها به همراه امکان &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/marker-clustering&quot;&gt;تجمیع نشانگرها&lt;/a&gt;ی نزدیک به هم در بزرگنمایی‌های کم و در نتیجه خلوت‌کردن صفحهٔ نقشه (&lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/marker-clustering&quot;&gt;Marker Clustering&lt;/a&gt;) از امکانات خوبی است که گوگل‌مپ در اختیار ما گذاشته است.&lt;/p&gt;
&lt;h3 id=&quot;کارگزار-وب-سوکت&quot;&gt;کارگزار وب سوکت&lt;/h3&gt;
&lt;p&gt;برای برقراری ارتباط دو طرفه بین پنل و وب سرور نیازمند یک برنامه کارگزار ساده و سریع هستیم. برای پیاده‌سازی این کارگزار با توجه به این‌که می‌تواند (و در آیندهٔ نزدیک باید) به صورت مستقل از سرویس لجستیک اجرا شود دستمان باز بود که از هر تکنولوژی دلخواهی استفاده کنیم. در نسخهٔ فعلی از زبان پایتون و ابزار &lt;a href=&quot;https://aiohttp.readthedocs.io/en/stable/&quot;&gt;aiohttp&lt;/a&gt; استفاده کردیم.&lt;/p&gt;
&lt;h3 id=&quot;کانال-ارتباطی--message-broker&quot;&gt;کانال ارتباطی – Message Broker&lt;/h3&gt;
&lt;p&gt;کارگزار وب سوکت و API پیک‌ها در دو اپلیکیشن مجزا اجرا می‌شوند. ذات یکی async و دیگری sync است، برای ارتباط بین این دو بخش سامانه تصمیم گرفتیم که از redis به عنوان یک broker ساده و سریع استفاده کنیم. گزینه‌های دیگر پیش رو استفاده از RabbitMQ یا Kafka بود که بیش از نیازمان بزرگ هستند. گزینهٔ دیگر هم استفاده از یک API مبتنی بر HTTP بود.&lt;/p&gt;

&lt;p&gt;استفاده از HTTP مزیت خاصی از نظر سادگی اشکال‌زدایی (debugging) به redis ندارد. تعداد کامپوننت‌های بیشتری دارد و در هنگام استقرار روی سرور دردسر بیشتری به تیم DevOps وارد می‌کند. علاوه‌بر آن با باز کردن پورت جدید هم باعث شلوغی پورت‌های سرور می‌شود هم احتمال سهل انگاری (در تنظیمات firewall و…) و ایجاد مشکل امنیتی را بیشتر می‌کند. در مجموع قابلیت Pub/Sub تعبیه شده در redis یک گزینهٔ بسیار مناسب برای رفع این نیاز در پادوکس است.&lt;/p&gt;

&lt;p&gt;برای اطلاعات بیشتر در رابطه با Pub/Sub ردیس می‌توانید به &lt;a href=&quot;https://redis.io/topics/pubsub&quot;&gt;مستندات آن&lt;/a&gt; مراجعه کنید؛ اما به صورت خلاصه ردیس می‌تواند تعدادی کانال ارتباطی داشته باشد که هریک یک نام یکتا دارند. پردازه‌های متفاوتی می‌توانند اطلاعاتی را روی یک کانال منتشر کنند و پردازه‌های دیگری که مشترک کانال شده‌اند آن اطلاعات را دریافت می‌کنند. در مورد سرویس ما تنها یک پردازه — API پیک — نقش منتشر کننده را دارد و پردازهٔ کارگزار وب‌سوکت هم نقش مشترکِ (subscriber) کانال را دارد.&lt;/p&gt;

&lt;p&gt;این معماری decoupling خوبی بین این دو پردازه ایجاد می‌کند. برای موارد تست یا اشکال‌زدایی می‌توانیم با استفاده از ابزارهای جانبی روی کانال پیام‌هایی را ارسال کنیم یا پیام‌های روی کانال را دریافت و بررسی کنیم. علاوه بر این با گسترش سرویس و نیازمندی‌ها منتشرکننده‌های بیشتری می‌توانند روی این کانال پیام ارسال کنند. پردازهٔ منتشر کننده و پردازهٔ مشترک می‌توانند روی سرورهای مجزایی استقرار یابند و با زبان‌های برنامه نویسی متفاوتی پیاده سازی شوند.&lt;/p&gt;
&lt;h2 id=&quot;نمونهٔ-پیادهسازی&quot;&gt;نمونهٔ پیاده‌سازی&lt;/h2&gt;
&lt;h3 id=&quot;api-پیکها-1&quot;&gt;API پیک‌ها&lt;/h3&gt;
&lt;p&gt;در این نمونه کد جهت سادگی مختصاتی که پیک‌ها ارسال می‌کنند ذخیره یا پردازش نمی‌شود و مستقیم به redis پاس داده می‌شوند. لطفاً دقت کنید که نام کانال redis را dlchannel گذاشتیم.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# settings.py&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CACHES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'broker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;BACKEND&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;django_redis.cache.RedisCache&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;LOCATION&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;redis://127.0.0.1:6379/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;OPTIONS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CLIENT_CLASS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;django_redis.client.DefaultClient&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# api.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django_redis&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_redis_connection&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewsets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mixins&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DriverLocationSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DecimalField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_digits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal_places&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DecimalField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_digits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal_places&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleUserSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DriverLocationEndpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mixins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateModelMixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewsets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GenericViewSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;serializer_class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriverLocationSerializer&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# Validate data&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'partial'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_serializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise_exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;c&quot;&gt;# Publish to redis&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_redis_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'broker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;publish_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;publish_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dlchannel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_serializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;publish_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'update_interval'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1/m'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;برای تست عملکرد درست این بخش از کامند subscribe ردیس می‌توانیم استفاده کنیم. پس از ارسال اطلاعات به API باید داده‌های مورد نظر در کانال dlchannel ردیس منتشر شوند. یک نمونه انتشار و دریافت موفق را در زیر می‌بینید:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;redis-cli subscribe dlchannel
Reading messages... &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;press Ctrl-C to quit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
۱&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;subscribe&quot;&lt;/span&gt;
۲&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dlchannel&quot;&lt;/span&gt;
۳&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;integer&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1
۱&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt;
۲&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dlchannel&quot;&lt;/span&gt;
۳&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: 35.0001, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: 53.12111, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: {&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: 10, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test_driver1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;}}&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;پنل-مدیریتی&quot;&gt;پنل مدیریتی&lt;/h3&gt;
&lt;p&gt;برای پیاده سازی نقشه می‌توانید به مستندات گوگل‌مپ مراجعه کنید. ما در پادوکس از &lt;a href=&quot;https://github.com/joewalnes/reconnecting-websocket&quot;&gt;reconnecting websocket&lt;/a&gt; استفاده کردیم تا اگر ارتباط پنل با کارگزار قطع شد به صورت خودکار اتصال مجدد برقرار شود. کد کلاینت بسیار ساده و خلاصه است. در زمان بارگذاری نقشه تابع setUpWebsocket فراخوانی می‌شود.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setUpWebsocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wsc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReconnectingWebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ws://127.0.0.1:8082/ws'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wsc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wsc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WebSocket Error '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wsc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;updateOnePoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parseJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;در تابع updateOnePoint نشانگر (Marker) روی نقشه با توجه به jsonی که از طرف وب‌سوکت دریافت شده جا به جا می‌شود.&lt;/p&gt;
&lt;h3 id=&quot;کارگزار-وبسوکت&quot;&gt;کارگزار وب‌سوکت&lt;/h3&gt;
&lt;p&gt;در اینجا از یک dictionary استفاده می‌کنیم تا بتوانیم متغیر وب‌سوکت هر کاربر را پیدا کنیم. این دیکشنری در &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;self[‘sockets’]&lt;/span&gt;‎ ذخیره می‌شود. وب سوکت را در آدرس &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;/ws&lt;/span&gt;‎ قرار می‌دهیم. لذا URL کامل وب سوکت همانطور که در کد جاوااسکریپت بالا دیدید &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;ws://127.0.0.1:8082/ws&lt;/span&gt;‎ خواهد شد.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sockets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/ws'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocket_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;websocket_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WebSocketResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;protocols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'echo-protocol'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'New websocket connection'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sockets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Connection established user='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8082&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;درخواست ایجاد ارتباط وب سوکت در دو مرحله انجام می‌شود. در مرحلهٔ اول (handshake) ابتدا یک درخواست HTTP عادی به کارگزار فرستاده می‌شود که شامل سرایند &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;Connection: Upgrade&lt;/span&gt;‎ است. اگر کارگزار امکان برقراری ارتباط وب‌سوکتی را داشته باشد و درخواست از طرف کاربر مجاز باشد مرحلهٔ دوم که ساخت اتصال اصلی سوکت و تبادل داده است انجام می‌شود. در این مثال هیچ authenticationی انجام نمی‌شود. برای اعتبار سنجی کاربر در مرحلهٔ handshake باید درخواست را بررسی کنیم و اگر کاربر مجاز به برقراری ارتباط نبود با پاسخ‌های مناسب (مانند۴۰۱ یا ۴۰۳) جلوی ادامهٔ عملیات را بگیریم. فراخوانی تابع &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;ws.prepare&lt;/span&gt; به معنی پایان handshake و آغاز ارتباط وب سوکت است، بنابراین هرگونه authentication ای باید قبل از فراخوانی این تابع انجام شود. تا زمانی که این متد فراخوانی نشده باشد ارتباط هنوز یک ارتباط HTTP ساده است و تمام response codeها و قوانین حاکم بر پروتکل HTTP در آن قابل استفاده است.&lt;/p&gt;

&lt;p&gt;در این مثال از یک کد ساده و عملا بی مصرف در تابع authenticate استفاده می‌کنیم. در کاربردهای واقعی باید منطق مورد نظرتان من جمله session یا token را در آن پیاده سازی کنید.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Your authentication logic&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'panel_admin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in websocker_handler method, before calling 'ws.prepare'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPUnauthorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;پس از برقراری ارتباط موفق به کمک یک حلقهٔ for می‌توانیم پیام‌هایی که از طرف مرورگر به سرور ارسال می‌شوند را دریافت کنیم. در پنل پادوکس پیامی از طرف مرورگر به سرور ارسال نمی‌شود بنابراین یک حلقهٔ ساده درست می‌کنیم که در انتها وقتی کاربر ارتباط وب‌سوکت را قطع کند آن سوکت را از دیکشنری sockets حذف کند.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WSMsgType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Connection error. user=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s exception=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aiohttp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WSMsgType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLOSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Request connection closure. user='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'websocket connection closed. user='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sockets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;تا اینجا کدی داریم که ارتباط وب‌سوکت را با مرورگر برقرار می‌کند، پیام‌های دریافت شده را پردازش می‌کند و در آخر سوکت را می‌بندد.
حالا باید کدی بنویسیم که در یک looper جدا به پیام‌هایی که از طرف redis دریافت می‌شوند را به تمام کاربران وب‌سوکت ارسال کند. کلاس PubSub کلاس کمکی‌ای است که مشترک کانال dlchannel می‌شود و پیام‌های دریافت شده را به وب‌سوکت‌ها ارسال می‌کند.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PubSub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_event_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpsc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Receiver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aioredis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscribe_to_channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dlchannel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpsc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpsc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Got message {message} from {sender.name}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_message_to_observers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error getting message from redis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;subscribe_to_channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpsc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_message_to_observers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;promises&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sockets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;promises&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;resolved_promises&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gather&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;promises&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_exceptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resolved_promises&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Failed to send message to one of subscribers {r}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Successfully published the update'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;کد نوشته شده در این کلاس سرراست و ساده است و نیازی به توضیح بیشتری ندارد.&lt;/p&gt;

&lt;p&gt;زمانی که کارگزار آماده به کار می‌شود باید یک نسخه از این کلاس ساخته شود و متد set_up آن فراخوانی شود. بنابراین این دو خط را به انتهای متد &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;&lt;strong&gt;init&lt;/strong&gt;&lt;/span&gt; کلاس &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;App&lt;/span&gt; اضافه می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'subscriber'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PubSub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on_startup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'subscriber'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;بهبودهای-آینده&quot;&gt;بهبودهای آینده&lt;/h2&gt;
&lt;ul&gt;
 	&lt;li&gt;با قرار گرفتن کارگزار وب‌سوکت پشت یک API Gateway بخش authentication به صورت کامل می‌تواند حذف و واگذار به Gateway شود. در این حالت کلیدهای دیکشنری sockets بجای آبجکت User می‌تواند یک رشتهٔ متنی حاوی username باشد که از headerها به راحتی دریافت می‌شود.&lt;/li&gt;
 	&lt;li&gt;استفاده از کتابخانهٔ [django-websocket-redis](https://django-websocket-redis.readthedocs.io/en/latest/) و قابلیت [Channels](https://blog.heroku.com/in_deep_with_django_channels_the_future_of_real_time_apps_in_django) که به جننگو اضافه شده ممکن است در بهبود کد کمک کننده باشد.&lt;/li&gt;
 	&lt;li&gt;بجای broadcast کردن پیام‌های دریافت شده از کانال ردیس، پیام فقط به کاربرانی ارسال شوند که نیاز و اجازهٔ دسترسی به آن اطلاعات دارند.&lt;/li&gt;
 	&lt;li&gt;بازنویسی کارگزار با زبان برنامه‌نویسی و/یا فریم‌ورکی سریعتر و سبک‌تر.&lt;/li&gt;
 	&lt;li&gt;بهبود کارگزار و نحوهٔ انتشار پیام‌ها در redis جهت Load Balance کردن ترافیک وب‌سوکت‌ها.&lt;/li&gt;
 	&lt;li&gt;باز کردن دسترسی کاربران عادی سیستم جهت مشاهدهٔ سفارششان در نقشه.&lt;/li&gt;
 	&lt;li&gt;استفاده از &lt;a href=&quot;https://www.cedarmaps.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;نقشهٔ سیدار&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mashhadimj</name></author><category term="Django" /><category term="Programming" /><summary type="html">قرار بود این نوشته را سه ماه پیش اینجا منتشر کنم اما نیمه‌کاره رهایش کردم چون روی تازگی مطالب وبلاگ کمی وسواس دارم و دوست دارم حرف جدیدی داشته باشد، نه صرفاً یک tutorial. این پیش نویس فراموشم شده بود تا اینکه شرکت از ما خواست که هر ماه یک مطلب فنی مرتبط روی وبلاگ شرکت منتشر کنیم؛ چون این وسواس روی وبلاگ شرکت برایم مطرح نبود سریعاً شروع به نوشتن کردم. الان متوجه شدم که وبلاگ شرکت از دسترس خارج شده و چون اجازهٔ انتشار مطلب در وبلاگ شخصی هم داشتیم مطلبی که نوشته بودم را با پیش‌نویسی که اینجا داشتم ترکیب و منتشر می‌کنم. پیشاپیش از تغییر لحن‌هاینnbsp;(رسمی و عامیانه) احتمالی متن معذرت می‌خوام که نتیجهٔ همین ترکیب شدن متن‌هاست.</summary></entry><entry><title type="html">جراحی Serializerهای Django Rest Framework</title><link href="https://mjafar.me/blog/2017/07/customizing-drf-serializers/" rel="alternate" type="text/html" title="جراحی Serializerهای Django Rest Framework" /><published>2017-07-21T16:15:38+00:00</published><updated>2017-07-21T16:15:38+00:00</updated><id>https://mjafar.me/blog/2017/07/customizing-drf-serializers</id><content type="html" xml:base="https://mjafar.me/blog/2017/07/customizing-drf-serializers/">&lt;p&gt;برای ساخت یک API مبتنی بر استانداردهای REST در Django دو راه‌حل [زندهٔ] معروف به نام‌های &lt;a href=&quot;https://django-tastypie.readthedocs.io/&quot; target=&quot;_blank&quot;&gt;Tastypie&lt;/a&gt; و &lt;a href=&quot;http://www.django-rest-framework.org&quot; target=&quot;_blank&quot;&gt;Django Rest Framework&lt;/a&gt; ساخته شده‌اند که هر یک نکات مثبت و منفی‌شان را دارند و در مجموع استفاده از DRF علیرغم ضعف مستنداتش فراگیرتر است.&lt;/p&gt;

&lt;p&gt;در DRF کلاس‌هایی به نام &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializer&lt;/code&gt;  وجود دارند که وظیفهٔ تبدیل داده‌ها به فرمت JSON یا XML یا… برای ارسال به مصرف‌کننده (Consumer) به علاوه وظیفهٔ validation و تبدیل داده‌های ارسال شده از طرف مصرف کننده به کلاس‌های مورد استفاده در پروژه را دارند. وظیفهٔ دوم بسیار شبیه به وظیفهٔ &lt;code class=&quot;highlighter-rouge&quot;&gt;Form&lt;/code&gt; های جنگو است.&lt;/p&gt;

&lt;p&gt;DRF این امکان را فراهم می‌کند که با ارث بری از کلاس &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializer&lt;/code&gt; ، سریالایزرهای کاملاً شخصی شده و متناسب با نیازتان را بنویسید، البته چون در خیلی از موارد endpointهایی که برای مصرف‌کننده expose می‌کنید رابطهٔ تنگاتنگی با مدل‌های پایگاه‌داده دارند، شبیه به &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelForm&lt;/code&gt;  کلاسی به اسم &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelSerializer&lt;/code&gt;  در DRF تعبیه شده. در کاربردهای خیلی ساده با مدل‌های ساده بدون Foreign Keyهای خاص و روابط پیچیده این کلاس کاملا کار راه انداز و سریع است ولی وقتی کار اندکی پیچیده‌تر بشود نیاز به customizationهای مختلفی به وجود می‌آید که متأسفانه اغلب به خوبی مستند نشده‌اند.&lt;/p&gt;

&lt;p&gt;در بعضی موارد شاید مجبور شوید کدهای DRF را بخوانید و از نحوهٔ کار آن مطلع شوید تا بتوانید ساده‌ترین تغییرات را اعمال کنید. در ادامه چند مورد که ممکن است مفید باشد را بررسی می‌کنم.&lt;/p&gt;
&lt;h2 id=&quot;مقداردهی-دستی-fkها&quot;&gt;مقداردهی دستی FKها&lt;/h2&gt;
&lt;p&gt;یکی از مواردی که مقداردهی FK لازم می‌شود ذخیرهٔ کاربر login شده در مدل است. مثلاً در یک شبکه اجتماعی فرضی برای ارسال کامنت یک FK به کاربری که کامنت را نوشته ذخیره می‌کنید. بدیهی است که دریافت username یا id کاربر از طرف client و اعتماد به آن اشتباه است. کد زیر به دو شیوهٔ استفاده از &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelForm&lt;/code&gt;  جنگو و &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelSerializer&lt;/code&gt;  تعبیه شده در DRF نوشته شده تا بتوانید مقایسه و معادل سازی کنید:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Django forms:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://docs.djangoproject.com/en/1.11/topics/forms/modelforms/#the-save-method&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commenter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# DRF Serializers:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_serizlier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_serizlier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commenter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;فیلد Foreign Key در مثال بالا &lt;code class=&quot;highlighter-rouge&quot;&gt;commenter&lt;/code&gt;  است که با کلاس &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;  ارتباط ایجاد می‌کند.&lt;/p&gt;

&lt;p&gt;البته برای مثال خاص &lt;code class=&quot;highlighter-rouge&quot;&gt;request.user&lt;/code&gt; &lt;a href=&quot;http://www.django-rest-framework.org/api-guide/validators/#currentuserdefault&quot; target=&quot;_blank&quot;&gt;یک راه ساده‌تر&lt;/a&gt; برای مقداردهی وجود دارد اما کاربرد مقداردهی دستی FKها طبیعتاً محدود به این مورد نیست.&lt;/p&gt;
&lt;h2 id=&quot;تغییر-در-مقدار-فیلدها-و-اجرای-validationهای-خاص&quot;&gt;تغییر در مقدار فیلدها و اجرای validationهای خاص&lt;/h2&gt;
&lt;p&gt;در &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelSerializer&lt;/code&gt;  تابع &lt;code class=&quot;highlighter-rouge&quot;&gt;validate&lt;/code&gt; و به ازای هر فیلدی &lt;code class=&quot;highlighter-rouge&quot;&gt;‎validate_&amp;amp;lt;field name&amp;amp;gt;&lt;/code&gt;‎‎  وجود دارد که کارکرد مشابه با &lt;code class=&quot;highlighter-rouge&quot;&gt;clean&lt;/code&gt; در &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelForm&lt;/code&gt;  دارند. وقتی داده‌ای از طرف مصرف کننده به API فرستاده می‌شود و متد &lt;code class=&quot;highlighter-rouge&quot;&gt;is_valid&lt;/code&gt; روی سریالایزر اجرا می‌شود علاوه بر validationها و تبدیلات پیش فرض تعریف شده، در صورت وجود متد  &lt;code class=&quot;highlighter-rouge&quot;&gt;‎validate_&amp;amp;lt;field name&amp;amp;gt;&lt;/code&gt;‎‎ هم اجرا می‌شود که مقدار دریافت شده را در آرگومان دریافت می‌کند و یا یک &lt;code class=&quot;highlighter-rouge&quot;&gt;serializers.ValidationError&lt;/code&gt; را raise می‌کند یا مقدار validate شده را return. متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate&lt;/code&gt;  در پایان اجرای validationهای مختص فیلدها اجرا می‌شود و روابط بین فیلدها را بررسی می‌کند. (مثلا در یک اندپوینت ثبت‌نام می‌تواند چک کند که password و confirm password حاوی مقادیر یکسان باشند)&lt;/p&gt;

&lt;p&gt;یک &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelSerializer&lt;/code&gt; برای ارسال کامنت زیر پست‌های شبکه اجتماعی فرضی‌مان درست می‌کنیم و متدهای validator مناسب را به آن اضافه می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'comment_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'reply_to'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate_comment_text&lt;/code&gt; چک می‌کند که در متن کامنت الفاظ نامناسب استفاده نشده باشد.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_comment_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contains_profanity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Please be polite!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;حاصل &lt;code class=&quot;highlighter-rouge&quot;&gt;ValidationError&lt;/code&gt; چنین خروجی‌ای خواهد بود:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;comment_text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;Please be polite!&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate_user&lt;/code&gt; کاری به مقدار ورودی ندارد و همیشه یک مقدار ثابت که کاربر login شدهٔ فعلی است را بر می‌گرداند. یکی از (و نه لزوما بهترین) راه‌های read only کردن یک فیلد همین کار است.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Ignore the value that is sent by the API consumer&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'request'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate_reply_to&lt;/code&gt; از ورودی ID کامنتی که به آن پاسخ می‌دهد را می‌گیرد. این فیلد اختیاری است (یک کامنت می‌تواند مستقیماً زیر پست نوشته شود و پاسخ به کامنت دیگری نباشد) اما اگر در آن مقداری وجود داشت چک می‌کند که ID معتبر باشد و شیٔ کامنت مرتبط به آن را از پایگاه‌داده دریافت می‌کند و بر می‌گرداند. این متد مثالی از کاربرد تغییر کلی ماهیت داده در حین validation است. (البته راه تمیزتر آن تعریف یک &lt;code class=&quot;highlighter-rouge&quot;&gt;Field&lt;/code&gt;  جدید و override کردن متد &lt;code class=&quot;highlighter-rouge&quot;&gt;to_internal_value&lt;/code&gt;  است)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_reply_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;parent_comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoesNotExist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The comment you&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;re replying to does not exist. It&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s probably deleted.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent_comment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate_post&lt;/code&gt; هم مشابه متد بالاست با این تفاوت که علاوه بر معتبر بودن ID دریافت شده چک می‌کند که پست امکان دریافت کامنت را دارد یا خیر. (شبیه به فیچر allow comments در گوگل پلاس و یوتیوب)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoesNotExist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The post you&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;re commenting on does not exist.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commentable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Cannot comment on this post.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;متد &lt;code class=&quot;highlighter-rouge&quot;&gt;validate&lt;/code&gt; هم برای چک کردن دو مورد که بیش از یک فیلد در آن درگیر هستند استفاده شده:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;کاربر اجازهٔ دیدن و کامنت گذاشتن روی آن پست را داشته باشد&lt;/li&gt;
  &lt;li&gt;اگر فیلد &lt;code class=&quot;highlighter-rouge&quot;&gt;reply_to&lt;/code&gt;  مقدار دارد؛ کامنتی که به آن پاسخ می‌دهد متعلق به همان پست باشد&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_has_permission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'comment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You are not allowed to comment on this post.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;reply_to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'reply_to'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reply_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reply_to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gotcha! Are you tampering with the data? The comment that you&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;re replying to does not belong to the post.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;to_representation-و-to_internal_value-برای-فیلدها&quot;&gt;to_representation و to_internal_value برای فیلدها&lt;/h2&gt;
&lt;p&gt;در مثال قبلی در متدهای validation تغییراتی روی ماهیت داده‌ها دادیم که به کار “validate” کردن اطلاعات ارتباط چندانی نداشت؛ علاوه‌ بر این، این تغییرات فقط در یک جهت بودند –تبدیل داده‌های دریافت شده از طرف کاربر به مدل‌ها. در ضمن اگر validationهای مشابهی در جای دیگر لازم باشد راه‌حل خیلی reusableای نیست (البته با استفاده از mixinها و factory methodها می‌توان workaroundای درست کرد)&lt;/p&gt;

&lt;p&gt;راه بهتر ایجاد یک فیلد است که با متدهای &lt;code class=&quot;highlighter-rouge&quot;&gt;to_representation&lt;/code&gt;  و &lt;code class=&quot;highlighter-rouge&quot;&gt;to_internal_value&lt;/code&gt;  هر دو جهت تبدیل اطلاعات را انجام می‌دهد. متد &lt;code class=&quot;highlighter-rouge&quot;&gt;to_representation&lt;/code&gt;  داده‌های دلخواه ما را به نوع داده‌ای که در خروجی API مشاهده می‌شود تبدیل می‌کند و &lt;code class=&quot;highlighter-rouge&quot;&gt;to_internal_value&lt;/code&gt;  اطلاعاتی که از مصرف‌کنندهٔ API دریافت شده را به اطلاعات مورد نظر سایر بخش‌های اپ تبدیل می‌کند. برای مثال برای &lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt;  در نمونه کد بالا یک فیلد درست می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PostField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_representation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_internal_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoesNotExist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The post does not exist.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commentable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Cannot comment on this post.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ذکر دو نکته خالی از لطف نیست:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;کد مربوط به چک کردن commentable بودن پست هنوز در متد validate هستند؛ چون در جاهای دیگری که از &lt;code class=&quot;highlighter-rouge&quot;&gt;PostField&lt;/code&gt;  استفاده می‌شود لزوما commentable بودن آن مدنظر نیست. متن ارور هم با توجه به این موضوع تغییر کرده.
2.در متد &lt;code class=&quot;highlighter-rouge&quot;&gt;vaidate_post&lt;/code&gt; آرگومانی که پاس داده شده دیگر id پست نیست و خود شیٔ &lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt; است که متد &lt;code class=&quot;highlighter-rouge&quot;&gt;to_internal_value&lt;/code&gt; برگردانده.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;توجه کنید که این دو متد با تعریف و کارکردی مشابه برای &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializer&lt;/code&gt;ها هم قابل override کردن هستند.&lt;/p&gt;

&lt;h2 id=&quot;مشخص-کردن-منبع-دریافت-اطلاعات-یک-فیلد&quot;&gt;مشخص کردن منبع دریافت اطلاعات یک فیلد&lt;/h2&gt;
&lt;p&gt;یک محدودیت که &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelSerializer&lt;/code&gt; تحمیل می‌کند همنام بودن و نگاشت یک‌به‌یک فیلدهای &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializer&lt;/code&gt; با فیلدهای مدل مربوط به آن است. برای رفع این مشکل دو راه‌حل وجود دارد که هرکدام اثرات جانبی مثبت و منفی خود را دارند.&lt;/p&gt;

&lt;h3 id=&quot;استفاده-ازserializermethodfield&quot;&gt;استفاده از &lt;code class=&quot;highlighter-rouge&quot;&gt;SerializerMethodField&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;به کمک این فیلد می‌توان مقداری که در خروجی به یک فیلد نسبت داده می‌شود را بجای اینکه مستقیماً از attribute همنام آن در شیٔ مدل دریافت کنید از یک متد در &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializer&lt;/code&gt; دریافت کنید. ماهیتاً فیلدی که با این روش مقداردهی می‌شود read only می‌شود.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;days_past&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SerializerMethodField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_days_past&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timezone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Zero days'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A day'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d days'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;نام متد همان نام فیلد است که در ابتدای آن ‎‎‎&lt;code class=&quot;highlighter-rouge&quot;&gt;‎get_&lt;/code&gt;‎ اضافه شده. اگر می‌خواهید از متد دیگری استفاده کنید نام آن را در قالب یک رشته به عنوان آرگومان اول به &lt;code class=&quot;highlighter-rouge&quot;&gt;SerializerMethodField&lt;/code&gt; پاس دهید.&lt;/p&gt;

&lt;h3 id=&quot;پارامترهایsource-و-extra_kwargs&quot;&gt;پارامترهای &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;extra_kwargs&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;با پاس دادن این پارامتر به فیلدها منبع دریافت دیتا را می‌توان تغییر داد. مقدار پارامتر می‌تواند اسم یک فیلد، یک متد یا حتا شامل &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;  باشد. اگر مقدار پارامتر برابر &lt;code class=&quot;highlighter-rouge&quot;&gt;'*'&lt;/code&gt;  باشد کل instance مدل پاس داده می‌شود.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeStampedModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_replies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reply_to_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comment&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'comment_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;read_only_fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;extra_kwargs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'source'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'created'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'source'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'user.get_full_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'read_only'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CommentSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;replies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'get_replies'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;n&quot;&gt;read_only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'replies'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;read_only_fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommentWORepliesSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_only_fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'replies'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;در مثال بالا به کاربرد &lt;code class=&quot;highlighter-rouge&quot;&gt;extra_kwargs&lt;/code&gt; برای پاس دادن پارامترهای اضافه به فیلدهایی که صریحاً نوع آن‌ها را مشخص نمی‌کنیم توجه کنید.&lt;/p&gt;

&lt;p&gt;اتفاقی که برای فیلد &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt; افتاده عملاً تغییر نام فیلد &lt;code class=&quot;highlighter-rouge&quot;&gt;created&lt;/code&gt; است.&lt;/p&gt;</content><author><name>mashhadimj</name></author><category term="Django" /><category term="Programming" /><summary type="html">برای ساخت یک API مبتنی بر استانداردهای REST در Django دو راه‌حل [زندهٔ] معروف به نام‌های Tastypie و Django Rest Framework ساخته شده‌اند که هر یک نکات مثبت و منفی‌شان را دارند و در مجموع استفاده از DRF علیرغم ضعف مستنداتش فراگیرتر است.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mjafar.me/assets/images/2017/07/rest.png" /></entry><entry><title type="html">اسپم‌های ایوند، شفافیت و صداقت</title><link href="https://mjafar.me/blog/2017/03/evand-spamming-case/" rel="alternate" type="text/html" title="اسپم‌های ایوند، شفافیت و صداقت" /><published>2017-03-12T00:06:41+00:00</published><updated>2017-03-12T00:06:41+00:00</updated><id>https://mjafar.me/blog/2017/03/evand-spamming-case</id><content type="html" xml:base="https://mjafar.me/blog/2017/03/evand-spamming-case/">&lt;p&gt;آیا بدترین اتفاقی که ممکن است یک برند آنلاین را تخریب کند لو دادن عمدی یا سهوی اطلاعات کاربرانش است؟&lt;/p&gt;

&lt;p&gt;ایوند، سامانهٔ فروش آنلاین بلیط که در ابتدا با اسم My Event (مای ایونت) آغاز به کار کرد اکنون از شناخته شده‌ترین استارت‌آپ‌ها بین افراد فعال در اینترنت و شبکه‌های اجتماعی است. این مطلب گزارشی کوتاه است از &lt;strong&gt;بعضی از&lt;/strong&gt; ایمیل‌های ناخواسته‌ای که به واسطهٔ عضویتم در این سایت دریافت کرده‌ام (و تا الان Report as Spam و Delete نکرده بودم) و این روند ادامه دارد. پیشتر در توییتر به این موضوع اعتراض کرده بودم اما از طرف یکی از بنیان گذاران این استارت‌آپ به «دروغ» گفتن متهم شدم، لذا به نظر لازم است با کمی بیشتر از ۱۴۰ کاراکتر و به صورت موردی این ایمیل‌ها بررسی شوند.&lt;/p&gt;
&lt;h2 id=&quot;چگونگی-تشخیص-منشأ-اسپم&quot;&gt;چگونگی تشخیص منشأ اسپم&lt;/h2&gt;
&lt;p&gt;Gmail این قابلیت را در اختیار کاربرانش قرار می‌دهد که برای یک آدرس ایمیل، بینهایت alias داشته باشند. این قابلیت به این صورت است که اگر به فرض مثال آدرس ایمیل شما janedoe@gmail.com باشد، هر آدرس ایمیلی که با janedoe+‎‎‎‎ شروع شود هم برای شماست و ایمیل‌های آن وارد inboxتان می‌شود. مثلاً می‌توانید از آدرس janedoe+work@gmail.com برای ایمیل‌های کاری و janedoe+family@gmail.com برای دریافت ایمیل‌های خانوادگی استفاده کنید و روی ایمیل‌ها filter و label تعریف کنید.&lt;/p&gt;

&lt;p&gt;من از این قابلیت استفاده می‌کنم و در هر سایتی که اجازه بدهد زمان ثبت نام اسم سایت را پس از + وارد می‌کنم تا هم بتوانم در صورت نیاز filter تعریف کنم و هم اگر ایمیل ناخواسته‌ای برایم ارسال شد رهگیری منشا‌ٔ آن ساده‌تر شود. زمان اولین ثبت‌نامم در مای ایونت هم از همین موضوع استفاده کردم و خوشبختانه regex تأیید آدرس ایمیل، آن زمان شعور کافی برای اینکه + را هم به عنوان کاراکتر مجاز در آدرس ایمیل محسوب کند را داشت.&lt;/p&gt;
&lt;h2 id=&quot;حفظ-حریم-خصوصی&quot;&gt;حفظ حریم خصوصی&lt;/h2&gt;
&lt;p&gt;وقتی ایمیل ناخواسته‌ای دریافت می‌کنیم یک مسئله حائز اهمیت است و آن این است که &lt;strong&gt;چه کسی&lt;/strong&gt; ایمیل را فرستاده است. این مسئله از این نظر اهمیت پیدا می‌کند که مشخص می‌کند آدرس ایمیل ما در دست چه کسی است. برای مثال در مورد ایوند فرض کنید برگزار کنندهٔ رویداد X از ایوند درخواست کند که یک ایمیل با محتوای مربوط به رویداد به تمام ثبت‌نام کنندگان ارسال کند، این ایمیل هرچند ممکن است مزاحم باشد اما مهم این است که آدرس ایمیل‌ها از کنترل ایوند خارج نشده است. اما در یک مورد دیگر فرض کنید که برگزار کننده لیست ایمیل شرکت کنندگان را از ایوند دریافت می‌کند تا خودش به صلاح خودش به شرکت کننده‌ها ایمیل ارسال کند؛ مشخص است که در این مورد ایوند دیگر هیچ کنترلی روی کمیت و محتوای ایمیل‌ها و این که این لیست ایمیل بعداً از کجا سر در خواهد آورد نخواهد داشت. این یعنی فاجعه!&lt;/p&gt;

&lt;p&gt;بگذریم که در نسخهٔ کنونی &lt;a href=&quot;https://evand.com/tos&quot;&gt;شرایط استفادهٔ ایوند&lt;/a&gt; (آخرین بررسی در ۲۱ اسفند ۹۵) تعهدی به حفظ حریم خصوصی کاربران داده نشده، به علاوه صفحهٔ جداگانه‌ای نیز تحت این عنوان وجود ندارد.&lt;/p&gt;
&lt;h2 id=&quot;بعضی-از-موارد&quot;&gt;بعضی از موارد&lt;/h2&gt;
&lt;h3 id=&quot;کافه-کارآفرینی&quot;&gt;کافه کارآفرینی&lt;/h3&gt;
&lt;p&gt;اولین رویدادی که به واسطهٔ ثبت‌نام در آن عضو مای ایونت شدم یکی از جلسات کافه کارآفرینی بود. پس از آن و تا پیش از report spam کردن لیست پستی آن‌ها، ایمیل من (و به احتمال قریب به یقین سایر شرکت کننده‌ها) مستقیماً در اختیار کافه کارآفرینی قرار گرفته بود و سه ایمیلی که به من ارسال کردند از طرف ایوند ارسال نشده نبود.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignright wp-image-262 size-medium&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-22-56-30.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignleft size-full wp-image-263&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-22-58-22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;clear clearfix&quot; style=&quot;clear: both;&quot;&gt;&lt;/div&gt;
&lt;h3 id=&quot;مرکز-کسب-و-کارهای-نوپا&quot;&gt;مرکز کسب و کارهای نوپا&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://ictstartups.ir&quot;&gt;ictstartups.ir&lt;/a&gt; سایت دولتی جالبی است که البته چون دولتی است پیش‌فرض دید اکراه آمیزی نسبت به آن داشتم و احتمالاً شما هم داشته باشید، اما این مورد [استثنائاً] مورد مثبتی است و دنبال کردن خبرنامه و مطالب داخل سایت را توصیه هم می‌کنم. من با ایمیل دیگری در این سایت به اختیار خودم ثبت‌نام کردم اما برایم عجیب بود که ایمیل‌های خبرنامه را در دو آدرس ایمیل متفاوتم در جیمیل و هات‌میل دریافت می‌کنم؛ بعد از کمی بررسی متوجه شدم که ایوند (یا کافه کارآفرینی که ایمیل من را دارد) با توجه به رویدادهایی که در آن‌ها شرکت کرده‌ام تشخیص داده‌اند که این لیست پستی برایم جالب است و من را در آن ثبت نام کردند. مشخص است که اگر مورد دوم باشد و کافه کارآفرینی من را در این لیست ثبت نام کرده باشد کارنامهٔ ایوند خیلی سیاه‌تر از این است که خودش مستقیماً این کار را کرده باشد؛ مسئلهٔ بد و بدتر است.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;size-full wp-image-264 aligncenter&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-12-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;رویداد-تکانه&quot;&gt;رویداد تکانه&lt;/h3&gt;
&lt;p&gt;من هیچ ایده‌ای ندارم که این رویداد چیست و چرا به من ایمیل ارسال شده؛ ایمیلی که ساده‌ترین استانداردهای لیست ایمیلی را ندارد؛ منظور این است که آدرس پستی فیزیکی و مشخصات فرستنده و توضیح اینکه چرا این ایمیل را دریافت کرده‌ام یا لینک به صفحه‌ای که شامل این توضیح باشد را ندارد. البته که در تصاویر بالا مشخص است که سایر ایمیل‌ها هم با وجود اینکه این لینک‌ها را داشتند اما اطلاعات چرت و پرت و بی ربطی در آن‌ها ثبت شده بود.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;size-full wp-image-265 aligncenter&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-16-32.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;لازم به یادآوری نیست که اینجا هم آدرس ایمیل من مستقیم یا غیرمستقیم از ایوند به مسئولین این رویداد رسیده بود و ایمیل از ایوند به نیابت از این رویداد ارسال نشده بود&lt;/p&gt;
&lt;h3 id=&quot;کانون-کارآفرینی-دانشگاه-تهران&quot;&gt;کانون کارآفرینی دانشگاه تهران&lt;/h3&gt;
&lt;p&gt;موردی مشابه کافه کارآفرینی؛ با این تفاوت که من در هیچ رویدادی که ارتباطی به این کانون داشته باشد شرکت نکردم اما ناخواسته عضو لیست پستی آن‌ها شدم و تا کنون دو ایمیل ناخواسته از آن‌ها وارد inboxم شده است.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignright wp-image-266 size-medium&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-20-53.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignleft size-full wp-image-267&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-23-36.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;clear clearfix&quot; style=&quot;clear: both;&quot;&gt;&lt;/div&gt;
&lt;p&gt;همانطور که در تصویر هم مشخص است، مسئولین کانون کارآفرینی ایمیل من را مستقیماً داشته‌اند و ایمیل را خودشان و نه ایوند ارسال کرده اند.&lt;/p&gt;
&lt;h3 id=&quot;مؤسسهٔ-قانون-گستر&quot;&gt;مؤسسهٔ قانون گستر&lt;/h3&gt;
&lt;p&gt;این مورد، مورد واقعا جالبی است! محتوای دو ایمیلی که به من ارسال کردند هیچ ارتباطی با رویدادهایی که تا کنون شرکت کرده بودم نداشت. همچنین در آدرس ایمیلم بخش + دار حذف شده بود. ایمیل‌ها هم از طرف خود ایوند ارسال شده‌اند با این که بعد از بار اول اعتراضم نسبت به ایمیل‌های ایوند به من قول دادند که دیگر ایمیلی از طرف ایوند دریافت نمی‌کنم.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-268&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-28-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-269&quot; src=&quot;/assets/images/2017/03/Screenshot-from-2017-03-11-23-30-35.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&quot;در-پایان&quot;&gt;در پایان…&lt;/h2&gt;
&lt;ul&gt;
 	&lt;li&gt;من هم به صورت پابلیک و هم در پیام خصوصی در توییتر روش مچ‌گیری اسپمرها با کاراکتر + در آدرس ایمیل را توضیح دادم و بعد از آن:&lt;/li&gt;
 	&lt;li&gt;ایوند آدرس ایمیل من (و احتمالاً هرکس دیگری که از این روش استفاده کرده) را ویرایش کرده و بخش بعد از + را حذف کرده.&lt;/li&gt;
 	&lt;li&gt;من با آدرس ایمیلی که ثبت‌نام کرده بودم و در انتهای آن عبارت myeventir وجود داشت نمی‌توانم وارد سایت شوم.&lt;/li&gt;
 	&lt;li&gt;ایمیلی که از طرف مؤسسهٔ قانون گستر به من ارسال شده هم بخش ‎+myeventir‎ را ندارد.&lt;/li&gt;
 	&lt;li&gt;ایوند دیگر اجازهٔ ثبت نام با ایمیلی که در آن + باشد را نمی‌دهد.&lt;/li&gt;
 	&lt;li&gt;مسئول ایوند در وهلهٔ اول ارسال اسپم و در اختیار قرار دادن آدرس ایمیل‌ها به دیگران را انکار کرده و پس از آن هم به پیام‌های خصوصی و عمومی بنده پاسخی ندادند؛ خوشبختانه توانستم بخشی از ایمیل‌های ناخواسته‌ای که هنوز پاک نکرده بودم را پیدا کنم و بسیار مشتاقم که پاسخ (بخوانید ماله کشیدن) ایوند را بشنوم!&lt;/li&gt;
 	&lt;li&gt;برای بار چندم تأکید می‌کنم که من در پیام خصوصی هم نسبت به این مورد اعتراض کرده‌ام و از ابتدا به سراغ نوشتن این گزارش نرفتم.&lt;/li&gt;
 	&lt;li&gt;و برای بار چندم یادآوری می‌کنم که این‌ها فقط ایمیل‌هایی هستند که پاک نکردم و در inboxم موجود هستند؛ اسپم‌ها بیشتر از این‌ها بوده اند.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;برگردیم به سوالی که ابتدای متن پرسیدم، آیا صرف لو دادن اطلاعات بدترین اتفاقی است که می‌تواند یک برند را تخریب کند؟ به نظر من خیر، عدم جلوگیری از رخ دادن اتفاقات مشابه، انکار واقعیت و عدم صداقت و تهمت دروغ‌گویی زدن بجای عذرخواهی و جبران به مراتب بدتر از صرف لو دادن اطلاعات است.&lt;/p&gt;</content><author><name>mashhadimj</name></author><category term="Bussiness &amp;amp; Startups" /><summary type="html">آیا بدترین اتفاقی که ممکن است یک برند آنلاین را تخریب کند لو دادن عمدی یا سهوی اطلاعات کاربرانش است؟</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mjafar.me/assets/images/2017/03/evand-spam.png" /></entry><entry><title type="html">وقت طلاست؟</title><link href="https://mjafar.me/blog/2017/03/is-time-money/" rel="alternate" type="text/html" title="وقت طلاست؟" /><published>2017-03-09T18:39:31+00:00</published><updated>2017-03-09T18:39:31+00:00</updated><id>https://mjafar.me/blog/2017/03/is-time-money</id><content type="html" xml:base="https://mjafar.me/blog/2017/03/is-time-money/">&lt;p&gt;وقتتان را “صرف” چه چیزی می‌کنید؟&lt;/p&gt;

&lt;p&gt;چرا “صرف”؟ چون زمان مثل پول است، بسته به این که از آن چطور استفاده می‌کنید باید هزینه‌ای “صرف” کنید. این هزینه ممکن است مصالحه‌ای باشد مثل انجام یک کار به جای کار دیگر با توجه به شرایط؛ اما بهتر است که خودتان را با این که «این مصالحه هزینه‌ای ندارد» نفریبید.&lt;/p&gt;

&lt;p&gt;به همین دلیل است که هیچوقت درک نکردم که چرا دیگران می‌پرسند «اوقات مرده‌ات را صرف چه می‌کنی؟». وقت هیچوقت «مرده» یا «مفت» نیست! اگر به دید یک &lt;em&gt;منبع ارزشمند *و&lt;/em&gt; جبران‌ناپذیر* به آن نگاه کنید، در خواهید یافت که وقت حقیقتاً منبعی بسیار گرانمایه و گرانقیمت است [که با پول قابل ارزش‌گذاری نیست].&lt;/p&gt;

&lt;p&gt;از این بگذریم، خوب است بدانیم که برخوردار بودن از امکان تفکر روی چگونگی گذران وقت یک امکان «تجملی» است که بسیاری از آن محرومند. این‌ها از تمام وقتی که داشتند استفاده کرده‌اند. بعضی، وقتشان را از تولد تا مرگ به «زنده‌ماندن» و «کارکردن» تخصیص می‌دهند…&lt;/p&gt;

&lt;p&gt;مخلص کلام این که یادمان باشد از وقتمان «درست» استفاده کنیم.&lt;/p&gt;
&lt;p style=&quot;color: #808080;&quot;&gt;این متن کوتاه ترجمه‌ای از &lt;a href=&quot;https://www.nytimes.com/2017/01/18/your-money/free-time-not-likely-for-time-is-anything-but-free.html?_r=0&quot; target=&quot;_blank&quot;&gt;این متن&lt;/a&gt; در New York Times نوشتهٔ Carl Richards است. خواندن متن اصلی را نیز توصیه می‌کنم :)&lt;/p&gt;</content><author><name>mashhadimj</name></author><category term="General" /><summary type="html">وقتتان را “صرف” چه چیزی می‌کنید؟</summary></entry><entry><title type="html">اسنپ، تپسی، اوبر چه «مشکلی» را حل کردند؟</title><link href="https://mjafar.me/blog/2017/02/uber-clones-in-iran/" rel="alternate" type="text/html" title="اسنپ، تپسی، اوبر چه «مشکلی» را حل کردند؟" /><published>2017-02-25T20:15:43+00:00</published><updated>2017-02-25T20:15:43+00:00</updated><id>https://mjafar.me/blog/2017/02/uber-clones-in-iran</id><content type="html" xml:base="https://mjafar.me/blog/2017/02/uber-clones-in-iran/">&lt;h2 id=&quot;به-روز-رسانی&quot;&gt;به روز رسانی&lt;/h2&gt;
&lt;p&gt;چند سال از انتشار این مطلب می‌گذرد و در طی این سال‌ها بعضی مشکلاتی که اشاره شده رفع شدند، بعضی مشکلات و مسائل جدید به وجود آمده‌اند، اگر الان این مطلب را مطالعه می‌کنید به قول انگلیسی زبان‌ها take it with a grain of salt!&lt;/p&gt;

&lt;h2 id=&quot;مقدمه&quot;&gt;مقدمه&lt;/h2&gt;
&lt;p&gt;شاید آشناییتان با این اپلیکیشن‌ها از طریق شنیده‌هایتان در گروه‌های دوستی یا در شبکه‌های اجتماعی باشد یا شاید از تبلیغات تلویزیونی سه سال پیش «تاکسی‌یاب». یا دوستان و آشنایانی که با ذوق خاصی به امید گرفتن یک سفر رایگان برایتان کد معرف فرستادند؛ شاید هم بخاطر سر و صداهایی که اخیراً به وجود آمده و اعتراض‌هایی که به این «اپلیکیشن[های] آمریکایی»(!) شده و بحث‌هایی که سر مجوز و امنیت این خدمات پیش آمده. به هر حال کمتر کسی هست که اسم «اسنپ» و «تپسی» را نشنیده باشد یا اگر ساکن تهران یا کرج باشد از خدمات این استارت‌آپ‌ها استفاده نکرده باشد. (به طور مشابه تاچسی در مشهد)&lt;/p&gt;

&lt;!-- جامعهٔ جو گیر و دنباله رو ای داریم (و به نظرم این بسیار آزار دهنده است)، می‌تونید نشانه‌هاش رو خیلی راحت توی شایعات تلگرامی یا ترندهای توییتر ببینید. به خصوص در بین قشری که خودش رو روشن‌فکر و فرهیخته می‌دونه، قشر امثال ما دانشجوها، فعالان استارت‌آپ‌ها، تئاتر بین‌ها و کافه رو ها و... بجای اینکه تقلید و سطحی نگری کمتر باشه عموماً بیشتره. خودم رو از هیچ‌کدوم از این گروه‌ها جدا نمی‌دونم و مبرا از اشتباه یا جوگیر شدن نیستم، اما همیشه سعی می‌کنم که خودم رو از جریان بکشم بیرون و یکم از بیرون بهش نگاه کنم، به کجا داره می‌ره، چطوری داره می‌ره و این که اگر من هم همراه این جریان حرکت کنم به نفع چه کسی هست؟ خوب یا بد، منحصر به ایران یا یک پدیدهٔ جهانی واقعیته که هست و خیلی راجع بهش حرف نگفته دارم . جایی که با این موضوع ارتباط پیدا می‌کنه بحثی هست که بهش بازاریابی ویروسی (viral) می‌گن. کافیه کار شما سر زبون‌ها بیفته، می‌تونه یک شبه از عرش به فرش برسه یا برعکس. چون فلانی و فلانی که آدم‌های باحالی هستن هر روز از اسنپ استفاده می‌کنن و قبل و بعد و در حین سفر توییت‌های مرتبط باهاش می‌کنن کم کم در ذهنمون این موضوع شکل می‌گیره که اسنپ راه‌حل تمام مشکلات تهرانه. چون فلانی و فلانی که آدمای cool و اجتماعی‌ای هستن و تو community کلی رفیق دارن از node.js و MongoDb خیلی تعریف می‌کنن پس این ابزارها ناجی تمام مشکلات Back-End وب هستن و... --&gt;
&lt;h2 id=&quot;uber&quot;&gt;Uber&lt;/h2&gt;
&lt;p&gt;منکر مزایای این خدمات نیستم، مرتباً از آن‌ها استفاده می‌کنم اما احساس می‌کنم بخش نسبتاً زیادی از محبوبیت و شهرتی که پیدا کردن بر اساس جوّ باشد. جوّی که معلوم نیست چقدر پایدار و سودآور بماند. شبیه جوّی که یک زمانی Viber را آنقدر محبوب کرده بود که باعث نگرانی اپراتورها شده بود. شاید محبوبیت این سرویس‌ها، به خصوص در بین جامعهٔ کارآفرینی (بهتر بگم، استارت‌آپی)، خیلی متأثر از موفقیت‌های Uber در شهرهای مختلف جهان و شهرت و حجم سرمایهٔ جذب شده‌اش باشد. تصوری که آگاهانه یا ناآگاه جریان دارد، تصور شیفتهٔ تقلید است که چون Uber خیلی موفق بوده، پس اگر در اکوسیستم ما هم استارتاپ‌هایی مثل Uber و Lyft وارد شوند ما هم اکوسیستم به روز و موفقی داریم که به سرعت جادهٔ ساختن Silicon Valley را در ایران طی می‌کند. خیلی خوشحالیم از این که سرویسی مشابه آنچه که «خارجی‌ها» دارند داریم و صرفاً به همین دلیل هرچقدر بیشتر استفاده کنیم زندگی راحت‌تر و مدرن‌تری داریم.&lt;/p&gt;

&lt;p&gt;اما چرا Uber این‌قدر محبوب شد؟ و آیا اون شرایط رو اینجا هم داریم؟ حالت عادی تاکسی در اینجا تاکسی‌های گذری و خطی هستند، تو تهران با هزار الی نه-ده هزار تومان می‌توان سوار تاکسی شد و به نقاط مختلفی از شهر سفر کرد. حتا به شهرهای اطراف مثل لواسان، بومهن، رودهن و پردیس. اما تاکسی‌های شهرهایی مثل اسلو یا سان‌فرانسیسکو خیلی متفاوت هستند. مسافر با تلفن، پیامک یا علامت دادن کنار خیابان سوار می‌شود و به صورت دربستی به مقصد می‌رسد. هزینهٔ تاکسی خیلی بالاست و به راحتی ممکن است ۲۰ الی ۵۰ دلار هزینهٔ یک مسیر داخل شهر شود که با معادل ریالی آن می‌توان بین دو شهر جا به جا شد. ماشین‌ها قدیمی، کثیف و راننده‌ها معمولاً خارجی از کشورهای فقیر هستند. حتا ممکن است شاهد چنین اتفاقی در سان فرانسیسکو(!) باشیم:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;My cab driver just pulled over to go take a piss!!! &lt;a href=&quot;https://twitter.com/hashtag/whytaxissuck?src=hash&quot;&gt;#whytaxissuck&lt;/a&gt;&lt;/p&gt;
— Ryan Graves (@ryangraves) &lt;a href=&quot;https://twitter.com/ryangraves/status/11046649483&quot;&gt;۵ فروردین ۱۳۸۹ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;به وضوح شرایط قابل مقایسه با شهری مثل تهران نیست؛ شرایط تاکسی‌ها خیلی بهتر و قیمت‌ها خیلی خیلی پایین‌تر است. راننده‌ها از ردهٔ اجتماعی نزدیک به خودمان هستند و زبان فارسی را درست بلدند. مجبور نیستیم به زور ایرادهایی که خارجی‌ها از تاکسی‌ها می‌گیرند را نامنصفانه به تاکسی‌های داخلی بچسبانیم! (واقعاً توییت‌های این چنینی آزاردهنده و احمقانه اند! دغدغه‌های ترجمه‌ای)&lt;/p&gt;

&lt;p&gt;مسیر خانه به دانشگاه را مثال می‌زنم. من می‌توانم با ۵-۷ دقیقه پیاده روی به ایستگاه تاکسی خطی برسم و با ۵ هزار تومان در مسیر ۳۰-۴۰ دقیقه‌ای با تاکسی به دانشگاه برسم. گزینهٔ دیگر مترو و صرف ۶۰-۷۰ دقیقه + حدود ۲ هزار تومان هزینه است. اگر از خودروی شخصی استفاده کنم هزینهٔ بنزین و نگهداری (روغن و بیمه و…) از ۳ هزار تومان برای هر سفر تجاوز نمی‌کند. اما اگر از اسنپ یا تپسی استفاده کنم با حساب کردن زمان انتظار برای رسیدن ماشین طی همان زمانی که با تاکسی خطی می‌توانستم برسم، ۲۲هزار تومان (اسنپ) یا ۲۱هزار و ۵۰۰ تومان (تپسی) باید هزینه کنم. آلودگی و ترافیکی که ایجاد کردم اگر از ماشین شخصی بیشتر نباشد یقیناً کمتر نیست، هزینه‌ بیشتر از ۴-۵ برابر شده و حتا از ۵ دقیقه پیاده روی روزانه هم محروم شدم!برای مقایسه در اسلو (نروژ) میانگین قیمت اوبر ۱۰ دلار (بین ۳۰ تا ۴۰ هزار تومان)، حدوداً &lt;em&gt;دو برابر قیمت اتوبوس&lt;/em&gt; و &lt;em&gt;نصف قیمت تاکسی&lt;/em&gt; هست. فکر نمی‌کنم جای توضیح زیادی وجود داشته باشد. از نظر تمیزی ماشین یا ادب راننده هم، طبق تجربه، واقعا تفاوت محسوسی بین خطی و اسنپ/تپسی نیست. حداقل در ایستگاه‌های نوبنیاد و آزادی همهٔ ماشین‌ها اکثراً تمیز و نو، راننده‌ها محترم و ساکت و ماشین‌ها یا ون یا پژو و سمند هستند.&lt;/p&gt;

&lt;p&gt;این ایده که یک شهروند درجه یک، یک ماشین خیلی خوب و تمیز (مثلا مرسدس کلاس S) با نصف قیمت ما رو به مقصد برساند در شرایطی که برای آمریکا توصیف شد واقعاً ایده‌ای عالی است. اما آیا در شرایط موجود در ایران هم این ایده همانقدر disruptive و بی‌نقص است؟ اکثر ماشین‌ها اسنپ و تپسی پراید هستند یا بنز؟ قیمت نصف تاکسی دارند یا چند برابر تاکسی؟ و آیا تاکسی‌ها و راننده‌های ما قابل مقایسه با تاکسی‌های مثلاً سان فرانسیسکو هستند؟ مقایسهٔ اسنپ و تپسی با تاکسی‌های خطی و گردشی به وضوح یک قیاس مع الفارق است و اصلا جای بحثی باقی نیست؛ مقایسهٔ اصلی بین آژانس‌ها و اپلیکیشن‌ها است. به نظرم اگر بخواهیم راحتی و هزینه را درجه بندی کنیم، می‌توان گفت Uber آمریکایی‌ها را از -۱ به ۱۰رساند اما در تهران از ۳ به ۷ رسیدیم.&lt;/p&gt;
&lt;h2 id=&quot;قیمت--هزینهها&quot;&gt;قیمت / هزینه‌ها&lt;/h2&gt;
&lt;p&gt;مهم‌ترین مزیت اپلیکیشن‌های سفارش خودرو، از نظر من، نه فقط مشخص بودن قیمت پیش از سفر، بلکه الزام راننده به گرفتن همان مقدار پول، و نه بیشتر، است. (هرچند مواردی بوده که راننده‌های تپسی پول اضافه گرفتند) قیمت‌های آژانس هم از پیش مشخص هستند؛ حتا بعضی آژانس‌ها بروشوری دارند که قیمت سفر از آن منطقه به تمام مناطق دیگر شهر در آن نوشته شده اما تقریباً غیرممکن است که راننده‌ای به بهانه‌های مختلف (پیچ و واپیچ بود، ترافیک بود، بروشور قدیمیه، اشتباه بهتون گفتن و…) در مقصد پول بیشتری دریافت نکند.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;اسنپ هم فنا رفت، راننده اکسپت کرد، بعد لغو کرد، بعد زنگ زد گفت اینقدر نمی صرفه بیشتر میدی بیام ....&lt;/p&gt;
— لوفی (@naariiman) &lt;a href=&quot;https://twitter.com/naariiman/status/830882525551718401&quot;&gt;۲۴ بهمن ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;این مسئله که قیمت مقطوع است و جای چانه زنی ندارد ممکن است در بعضی شرایط و برای بعضی افراد (که قدرت چانه زنی خوبی دارند!) نکتهٔ منفی باشد اما در اکثر مواقع حسن بزرگی محسوب می‌شود. برای مثال، حدود دو ماه پیش، در حالی که تاکسی‌های فرودگاه امام قیمت نفری ۶۰ تا ۸۰ هزار تومان می‌دادند، سفر سه مقصدی با اسنپ برایمان ۵۱ هزار تومان بیشتر هزینه نداشت. جلوگیری از قیمت دادن‌های بی حساب و کتاب و نجومی تاکسی‌ها و شخصی‌ها جلوی فرودگاه، راه‌آهن، ترمینال‌های اتوبوس و اماکن مشابه از مزایای مهم این اپلیکیشن‌ها است.&lt;/p&gt;

&lt;p&gt;امکان پرداخت با کد UUSD و درگاه بانکی ویژگی منحصر به فرد و مهم اپلیکیشن‌ها هست که در هیچ آژانسی تا به حال نبوده. علاوه بر این، برای معرفی اپلیکیشن به دوستان، هر دو تخفیف‌های خوبی در نظر گرفتند که حداقل چند ماهی سفرهای رایگان یا خیلی کم هزینه را به همراه دارد. البته باید توجه کنیم که این سفره همیشه پهن نیست و دیر یا زود پیدا کردن کسی که از کد معرف ما استفاده کند خیلی سخت / غیرممکن می‌شود.&lt;/p&gt;

&lt;p&gt;اگر قیمت‌های بدون تخفیف را در نظر بگیریم و با آژانس‌ها مقایسه کنیم واقعاً تفاوت چندانی وجود ندارد (بجز احتمالاً «سرگردنه»‌هایی مثل فرودگاه و راه‌آهن و…). آژانس‌ها پس از رساندن مسافر به مقصد باید بدون مسافر به دفتر آژانس برگردند و قیمت این سفر هم در کرایهٔ آژانس لحاظ شده. اما یک ویژگی خیلی محبوب برای راننده‌های اسنپ و تپسی همین مسأله است: با وجود این که قیمت تقریباً با آژانس یکسان است لازم نیست خالی برگردند و بعد از چند دقیقه می‌توانند مسافر جدیدی سوار کنند و این یعنی سود بیشتر، برای راننده و اپلیکیشن‌ها که ۱۵٪ کمیسیون دریافت می‌کنند. البته نه برای مسافر.&lt;/p&gt;

&lt;p&gt;در زمان‌های شلوغی و بارندگی قیمت‌های اسنپ و تپسی به اندازهٔ قابل توجهی افزایش پیدا می‌کند. هزینه‌های سفر دربستی با این اپلیکیشن‌ها واقعاً هزینهٔ خیلی کمی نیست که ۲۰٪ یا ۳۰٪ افزایش قیمت اثر چندانی روی قیمت نداشته باشد. یادآوری می‌کنم مسیر ۲۰ هزار تومانی تا دانشگاه که با تاکسی ۵ هزارتومان و با خودروی شخصی کمتر از ۳ هزار تومان برایم هزینه دارد، لذا حاشیهٔ سود راننده‌ها واقعاً بالاست و درخواستی که برای افزایش قیمت دارند شاید در اکثر (البته نه همهٔ) موارد صرفاً طمع باشد! در تجربهٔ ای که در بهمن ماه امسال با دو-سه مورد بارش سنگین داشتم هم جالب بود که با وجود بارش برف، اتوبان‌ها و خیابان‌های اصلی باز بودند و حتا اتوبان همت از روزهای عادی هم خلوت‌تر بود؛ به علاوه بارندگی تا قبل از ظهر تمام شده بود و سنگینی بارش هم محدود به مناطق شمال شهر بود اما افزایش هزینه در تمام طول روز و برای تمام نقاط شهر اعمال شده بود. وقتی آفتاب چشمم را می‌زد به ناچار داشتم پیام افزایش ۳۰ درصدی قیمت به علت شرایط نامساعد هوا را تأیید می‌کردم تا درخواست خودرو برای برگشت به خانه بدهم!&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;اسنپ و تپ‌سی هم هر دو زبل محله شده‌ن دیگه؛ بالای دربند یه بارونی می‌زنه قیمت‌ها می‌شه شرایط خاص &amp;#x1f602;&amp;#x1f602;&lt;/p&gt;
— Jalal Samiee (@JalalSamiee) &lt;a href=&quot;https://twitter.com/JalalSamiee/status/830378761375842305&quot;&gt;۲۳ بهمن ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/%D8%A7%D8%B3%D9%86%D9%BE?src=hash&quot;&gt;#اسنپ&lt;/a&gt; عالیه، اما بزرگترین ایرادش اینه که نمیشه بهش اعتماد کرد..ینی روز بارونی یا وقتی دیرت شده بهترین تصمیم گرفتن آژانسه&lt;/p&gt;
— Simin (@TheSiminn) &lt;a href=&quot;https://twitter.com/TheSiminn/status/830638900309811201&quot;&gt;۲۴ بهمن ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;مشکلی که با Uber وجود دارد ولی شخصاً در اسنپ و تپسی ندیدم این است که راننده‌ها در دقایق نزدیک به ساعات اوج درخواست‌ها را قبول نمی‌کنند، تا بعد از شروع ساعت افزایش قیمت قبول کنند. البته شخصاً در این ساعات درخواست سفر ندادم و ممکن است این ایراد به کپی‌های ایرانی Uber هم وارد باشد اما مسئله‌ای که بیشتر با آن مواجه شدم قبول نکردن درخواست یا رد درخواست به علت ترافیک است. مسأله وقتی آزار دهنده می‌شود که گاهی ترافیک گوگل به اندازهٔ کافی به روز نیست؛ چند بار پیش آمده خیابانی که الان در آن هیچ ترافیکی نیست، چون یک ربع پیش بسته بوده در نقشهٔ گوگل قرمز پررنگ است و راننده‌ها به این دلیل از خیر قبول درخواست سفر می‌گذرند. البته کاری از اسنپ، تپسی و راننده‌ها در این مورد بر نمی‌آید اما تا به حال چنین مشکلی را با آژانس‌های محلی که از پنجره شان به‌روزترین آمار ترافیک خیابان‌های اطراف را دارند نداشتم!&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;راننده‌ی اسنپ سفرم رو لغو کرد که بره تو ساعت ترافیک&lt;/p&gt;
— Alireza Afkar (@alireza_afkar) &lt;a href=&quot;https://twitter.com/alireza_afkar/status/830756374720167942&quot;&gt;۲۴ بهمن ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;دسترس-پذیری&quot;&gt;دسترس پذیری&lt;/h2&gt;
&lt;p&gt;اپلیکیشن‌های سفارش خودرو در تمام نقاط شهر قابل استفاده‌اند اما کمتر آژانسی هست که به تمام شهر خدمات ارائه کند. این مسأله نیازمند داشتن ناوگانی بزرگ از خودروها در سطح شهر است که یکی از نتایج آن این است که تقریباً پیش نمی‌آید که مثل آژانس‌های معمول با «ماشین نداریم» و «نیم ساعت دیگه زنگ بزنید» مواجه شویم.(هرچند ۳ مرتبه با تپسی و یک مرتبه با اسنپ، در شرایطی که خیلی عجله داشتم این اتفاق برایم افتاد) با توجه به نزدیکی و آمادگی خودروها زمان انتظار برای رسیدن ماشین خیلی کمتر است و تجربهٔ واقعی درخواست لحظه‌ای خودرو فقط با این سیستم قابل ارائه است. (توجه کنید که تاکسی‌های خطی را در مقایسه وارد نمی‌کنیم) انعطاف پذیری سیستم آنلاین در درخواست خودرو در ساعات مختلف شب بهتر است هرچند طبق تجربه در درخواست خودرو در ساعات اولیهٔ صبح آژانس‌های سنتی بهتر عمل کرده‌اند. ترافیک عصر و همانطور که بالاتر هم اشاره شد گاهی اطلاعات ترافیکی اشتباه گوگل درخواست خودرو در بعضی ساعات را مشکل می‌کند اما بر خلاف آژانس‌های سنتی عموماً بعد از ۴-۵ تکرار درخواست یا استفاده از اپلیکیشن رقیب بالاخره خودرو پیدا می‌شود.&lt;/p&gt;

&lt;p&gt;در این زمینه اپلیکیشن‌های اسنپ و تپسی با وجود اینکه بی نقص نیستند اما بدون شک از نظر عملکرد نسبت به آژانس‌های سنتی یک سر و گردن بالاترند.&lt;/p&gt;
&lt;h2 id=&quot;امنیت-و-کیفیت&quot;&gt;امنیت و کیفیت&lt;/h2&gt;
&lt;p&gt;مسئلهٔ امنیت سفرها مسئله‌ای است که بیشتر از سایر مسائل به آن توجه شده و اگرچه بعضی اشخاص مغرضانه بیش از حد روی آن انگشت می‌گذارند اما اهمیت بالای آن بر کسی پوشیده نیست. ویژگی اطلاع دادن مسیر سفر به آشنایان و دنبال کردن real time اگرچه به بهبود امنیت کمک می‌کند اما در عمل نمی‌توان به صورت پیوسته سفر را چک کرد و بلافاصله متوجه اشکال شد. جای خالی یک سامانهٔ هوشمند که مرتباً مسیر حرکت را چک کند و در صورت تشخیص ناهنجاری به شرکت و یا آشنایان مسافر اطلاع دهد حس می‌شود. درضمن دقیقا نمی‌دانم در صورت قطع شدن اینترنت یا خاموش کردن عمدی location این سیستم چطور به کارش ادامه می‌دهد.&lt;/p&gt;

&lt;p&gt;شخصاً برایم پیش آمده که راننده عمدا دکمهٔ «شروع سفر» را تا آخر سفر نزده و طبیعتاً مسیر سفر ثبت نشده. یا راننده‌هایی هستند که قبل از رسیدن به مقصد «پایان سفر» می‌زنند. سلب مسئولیت در شرایط استفادهٔ همهٔ خدمات دهنده‌ها بسیار تأکید شده و خشن‌ترین برخوردی که سرویس دهنده با راننده‌ها می‌تواند انجام دهد غیرفعال کردن حساب کاربری‌شان است! آن روی سکه هم چنین بندی در توافق کاربری است:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/elsereturn/status/830464312258990081&quot;&gt;&lt;img src=&quot;/assets/images/2017/02/photo_2017-02-23_00-38-25.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;پیش فرض اشتباهی که وجود دارد این است که همیشه این راننده است که ممکن است برای مسافر ایجاد خطر کند؛ در صورتی که یک مسافر می‌تواند خیلی راحت‌تر می‌تواند با اکانت جعلی و مشخصات دروغ درخواست خودرو بدهد و از راننده اخاذی یا دزدی کند. خشن‌ترین برخورد سرویس دهنده هم لابد مسدودکردن حساب کاربری مسافر است.&lt;/p&gt;

&lt;p&gt;مسئلهٔ دیگری که به امنیت مربوط می‌شود در دسترس بودن شماره تلفن و مشخصات مسافرها برای راننده‌ها است که ممکن است اثرات جانبی ناخوشایندی داشته باشد. البته بدیهیست که قصد برچسب زدن به همهٔ راننده‌ها را ندارم اما این نکته نباید از نظرها پنهان بماند.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;یارو زنگ زده که من راننده &lt;a href=&quot;https://twitter.com/Snapp_Team&quot;&gt;@Snapp_Team&lt;/a&gt;عادت دارم شماره مسافر هامو سیو میکنم. توتلگرامتون دیدم با سگ عکس گذلشتین. من سگم یه مدت وحشی شده. چرا؟&lt;/p&gt;
— zahra saberi (@ZaraSab) &lt;a href=&quot;https://twitter.com/ZaraSab/status/835441661329223682&quot;&gt;۷ اسفند ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;راننده‌هایی که فقط درخواست خانم‌ها را قبول می‌کنند؛ راننده‌ای که پیش از اینکه مسافر را سوار کند و متوجه شود مسافرش خانم متأهل همراه با فرزندش است پشت تلفن شیرین زبان است اما به محض این که مسافر را می‌بیند انقدر ناراحت می‌شود که جواب سلام مسافر را هم نمی‌دهد؛ (و قبل از اینکه برچسب بی‌فرهنگی و حماقت به «ما ایرانی‌ها» بزنید:) ۳۲ مورد اتهام به تجاوز &lt;a href=&quot;http://www.independent.co.uk/news/uk/uber-drivers-accused-of-32-rapes-and-sex-attacks-on-london-passengers-a7037926.html&quot;&gt;راننده‌های اوبر در &lt;em&gt;لندن&lt;/em&gt;&lt;/a&gt;؛ کیس‌های مشابه آزار و اذیت در &lt;a href=&quot;http://www.dallasnews.com/news/crime/2015/08/03/city-spokeswoman-permit-used-by-uber-driver-accused-of-rape-is-fraudulent&quot;&gt;دالاس&lt;/a&gt; و بوستون (در این باره &lt;a href=&quot;http://www.marieclaire.com/culture/news/a14480/uber-rides-dangerous-for-women/&quot;&gt;بخوانید&lt;/a&gt;) و اگر علاقه مندید یک لیست تقریبا کامل از مشکلات مشابه (تجاوز و آزار جنسی، قتل، آدم ربایی، DUI و…) در &lt;a href=&quot;http://www.whosdrivingyou.org/rideshare-incidents&quot;&gt;این لینک&lt;/a&gt; موجود است. مشکل امنیت منحصر به ایران نیست و مشکلی جدی است. سلب مسئولیت شدید شرکت‌ها در این موارد هیچ اطمینان خاطری به مسافران نمی‌دهد و قطعا راه جبران آن اضافه کردن یک سیستم ناقص tracking و اشتراک سفر نیست.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;یکی از آشناهامون اسنپ گرفته راننده مزاحمش شده، در حدی که بنده خدا می‌خواسته خودش رو پرت کنه پایین.
روش ثبت‌نام اینا چطوریه مگه؟&lt;/p&gt;
— Mehdi (@momedaaa) &lt;a href=&quot;https://twitter.com/momedaaa/status/834832226030325760&quot;&gt;۵ اسفند ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;این که تا کنون شکایتی جدی نشده و در پلیس فتا پرونده‌ای تشکیل نشده نشانهٔ امنیت سرویس‌ها نیست؛ صرفاً تعداد کاربران به حدی نشده که کیس‌های مشابه اوبر پیش بیاید. ساختمان پلاسکو هم ۵۰ سال فرو نریخت اما این دلیل ایمنی ساختمان نبود و نیست. در ضمن باید به این مسئله هم توجه داشت که تا الان فقط در سه شهر تهران، مشهد و کرج چنین سرویسی راه اندازی شده و تا scaleای به بزرگی اوبر خیلی فاصله است. فقط باید صبر کرد و دید که وقتی خدای نکرده تصادف منجر به فوت در حین استفاده از این سرویس‌ها پیش بیاید بیمه و پلیس و MTN و تاکسی‌رانی و شهرداری و وزیر و وکیل چه واکنشی نشان می‌دهند و کاسه کوزه‌ها سر چه کسی خراب می‌شود!&lt;/p&gt;

&lt;p&gt;اسنپ و تپسی صرفاً یک رینگ بوکس را آماده می‌کنند و اطلاع می‌دهند که رینگی هست و هزینهٔ ورودی را دریافت می‌کنند؛ این که چه کسانی وارد رینگ می‌شوند و آیا سالم و زنده خارج می‌شوند یا نه هیچ ارتباطی با آن‌ها ندارد. تا الان که مشکلی پیش نیامده، به امید خدا بعداً هم مشکی پیش نخواهد آمد. در ضمن ویدیو چک آنلاین هم برای امنیت بیشتر تعبیه شده :)&lt;/p&gt;

&lt;p&gt;راجع به کیفیت خودروها جسته و گریخته مطالبی بیان شده و فقط به نظرم باید توجهتان را به این نکته جلب کنم که خیلی از راننده‌های اسنپ و تپسی همزمان مشغول کار در آژانس هستند یا در آژانس‌ها کار می‌کردند و الان فقط با این اپلیکیشن‌ها فعالیت می‌کنند؛ اما استریوتایپی که در ذهن بعضی‌ها هست (و بیش از حد به نظر می‌آید که متأثر از نظرات خارجی‌ها راجع به اوبر باشد) به این شکل است که همان خودرو و همان راننده وقتی از طرف آژانس می‌آیند «بی ادب» و «کثیف» هستند، «بوی گند سیگار» می‌دهند و کولر و بخاری روشن نمی‌کنند ولی اگر با یک اپلیکیشن سفارش خودرو داده باشیم همه چیز برعکس می‌شود. من طی دفعات متعددی که هر دو اپلیکیشن و آژانس‌های مناطق مختلف تهران (از تجریش و فرمانیه تا پیروزی و طرشت) استفاده کردم &lt;em&gt;هیچ&lt;/em&gt; تفاوتی در این زمینه ندیدم.&lt;/p&gt;
&lt;h2 id=&quot;از-دیدرانندهها&quot;&gt;از دید راننده‌ها&lt;/h2&gt;
&lt;p&gt;اتحادیهٔ اتوموبیل‌های کرایه تصویب کرده است که کمیسیون آژانس‌ها نباید از ۱۵٪ بیشتر باشد اما چون خودشان هم ذی‌نفع هستند و هم ناظر و هم قانون‌گذار، یک سیستم معیوب تشکیل شده که به راحتی کمیسیون‌ها ۲۰٪ و بالاتر می‌گیرند و صدای راننده‌ها هم به جایی نمی‌رسد. راننده‌هایی که با اسنپ و تپسی کار می‌کنند اما کمیسیون ۱۵٪ را پرداخت می‌کنند و نه بیشتر. در تپسی اگر با خودروی بالای ۴۰ میلیون تومان به عنوان راننده ثبت نام کنید همان ۱۵٪ را هم پرداخت نمی‌کنید و تمام کرایه را یک‌جا دریافت می‌کنید (اگر تا الان این قانون تغییری نکرده باشد). این واقعا عالی است اما در عوض راننده‌ها استخدام اسنپ و تپسی نیستند. همانطور که گفته شد اسنپ و تپسی صرفاً بستر را فراهم می‌کنند. راننده‌هایی که وارد آژانس می‌شوند در ازای کمیسیونی که پرداخت می‌کنند بیمه، سهمیه بنزین، مجوز طرح ترافیک، محل استراحت، تغذیه و… دریافت می‌کنند اما در اسنپ و تپسی خبری از هیچ کدام نیست.&lt;/p&gt;

&lt;p&gt;مزیت این سرویس‌ها این است که به صورت «تفریحی» و به عنوان شغل چندم و پاره وقت می‌توان رانندگی و کسب درآمد کرد. اما آن روی سکه هم در ایران و هم در کشورهایی که اوبر و لیفت فعال هستند این است که راننده‌هایی که به صورت تفریحی عضو سرویس شده‌اند به اصطلاح نان افرادی که شغل اصلیشان رانندگی است و تنها منبع درآمد خانواده‌شان رانندگی است را آجر می‌کنند. این یک چالش اخلاقی است که به شکل‌های مختلف و تقریباً مشابهی مطرح می‌شود. تکنولوژی disruptive است، ممکن است خیلی شغل‌ها را به خطر بیندازد؛ اما جنبهٔ انسانی ماجرا را باید همیشه در نظر بگیریم. هیچ چیز سیاه و سفید نیست، disruptive بودن همیشه سود آور نیست.&lt;/p&gt;
&lt;h2 id=&quot;اثرات-جانبی&quot;&gt;اثرات جانبی&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fa&quot;&gt;
&lt;p dir=&quot;rtl&quot; lang=&quot;fa&quot;&gt;با [#اسنپ](https://twitter.com/hashtag/%D8%A7%D8%B3%D9%86%D9%BE?src=hash) مسافرت کنید تا ترافیک کمتر بشه&amp;#x1f609;&amp;#x1f602;&amp;#x1f609; &lt;a href=&quot;https://t.co/JNDzgkyelu&quot;&gt;https://t.co/JNDzgkyelu&lt;/a&gt;&lt;/p&gt;
— گلامپ♣✈ (@Galaxynote1387) &lt;a href=&quot;https://twitter.com/Galaxynote1387/status/830461110843211777&quot;&gt;۲۳ بهمن ۱۳۹۵ ه‍.ش.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;تبلیغات زیادی حول کاهش آلودگی هوا و ترافیک در صورت استفاده از اسنپ و تپسی می‌شود. اما آیا واقعاً این اتفاق می‌افتد؟ معمولاً استفاده از خودروی شخصی تک سرنشین مضرترین عمل در آلوده کردن هوا و سنگین شدن ترافیک تلقی می‌شود اما این سرویس‌ها از خودروی تک سرنشین هم اثر منفی‌تری دارند و قطعاً کمکی به بهبود این وضع نمی‌کنند. خودروی شخصی در مبدأ روشن می‌شود و در مقصد خاموش و فقط در بین راه در آلودگی و ترافیک نقش دارد اما سفیرهای اسنپ و تپسی در سطح شهر تک سرنشین و بی هدف گشت می‌زنند تا مسافر پیدا کنند. پیش از حرکت از مبدا و پس از رسیدن به مقصد هم روشن بودند و هستند. حتا آژانس‌های سنتی هم carbon footprint کمرنگ‌تری دارند. هدف از سفر رساندن یک نفر به مقصد است که عملاً با خودروی شخصی تک سرنشین تفاوتی ندارد، حتا اگر ریزبین باشیم در پایان سفر دو نفر به نقطه‌ای می‌رسند که فقط یکی از آن‌ها نیاز داشت که به آن محل برسد و انرژی‌ای که صرف جا به جایی راننده شده عملاً به هدر رفته است.&lt;/p&gt;

&lt;p&gt;در کاهش آلودگی هوا و ترافیک تنها راه حل‌های مؤثر حمل و نقل عمومی و Ride Sharing (مثل &lt;a href=&quot;https://hampasho.com/&quot;&gt;همپا&lt;/a&gt;) هستند؛ که از سال‌ها پیش در تاکسی‌های خطی و گذری از آن استفاده می‌کردیم. چیزی که شاید برای اهالی سیلیکون ولی نوآورانه و جدید باشد :)&lt;/p&gt;

&lt;p&gt;یکی از فرصت‌های خوبی که این اپلیکیشن‌ها به وجود می‌آورند تسهیل امکان درآمد خانم‌ها از این راه است؛ ایجاد فرصت برابر برای کار کردن در این صنعت که با محیط به اصطلاح male dominated آژانس‌ها و تاکسی‌های سنتی تا به حال خیلی سازگار نبوده.&lt;/p&gt;
&lt;h2 id=&quot;در-پایان&quot;&gt;در پایان…&lt;/h2&gt;
&lt;p&gt;سیستم نظرسنجی، امتیازدهی و پشتیبانی هم در Uber و هم در کپی‌های ایرانی مهم‌ترین و اساسی‌ترین عاملی است که سطح کیفی سرویس را حفظ می‌کند. بعضی‌ها معتقدند که اگر همین سیستم روی تاکسی‌های دربست شهری و آژانس‌ها هم وجود داشت کیفیت خدمات خیلی بالاتر می‌بود.&lt;/p&gt;

&lt;p&gt;نوآوری‌های disruptive از بهترین انواع نوآوری هستند (هرچند disruptive خطاب کردن این سرویس‌ها هندوانه زیر بغل آن‌ها گذاشتن است). تکنولوژی برای پیشرفت جامعه حیاتی است و نباید با آن برخورد سلبی کرد. برخورد سلبی با تکنولوژی هرگز به نتیجه نرسیده و فقط باعث ضرر کردن مردم و چند سال اصطکاک بیهوده بین مردم و مقامات شده است. اما باید در نظر داشته باشیم که هیچ چیزی سیاه و سفید مطلق نیست. لزوماً همه چیز آمریکا از همه چیز ما بهتر نیست. لزوماً شرایط یک تکنولوژی مشابه در کشورهای مختلف با هم برابر نیست. چیزی که در آمریکا خیلی عالی بوده لزوماً اینجا هم به همان مقدار نوآورانه نیست. خودمان را برای بزرگ کردن بدی‌ها و خوبی‌ها به آب و آتش نزنیم! جو گیر نباشیم. چشممان را به روی حقیقت‌ها نبندیم.&lt;/p&gt;

&lt;p&gt;بعضی اعتراض راننده‌ها به اسنپ و تپسی را مقایسه می‌کنند با اعتراض پستچی‌ها به ایمیل! اساساً مقایسه‌های این چنینی اشتباه و بزرگنمایی است. اپلیکیشن‌های اسنپ و تپسی کاری که قبلاً با تماس تلفنی انجام می‌شد را با اپلیکیشن موبایلی جایگزین کردند (مشابه کاری که زودفود و ریحون با سفارش تلفنی غذا کردند). امکاناتی را به این فرایند اضافه کردند (مثل پرداخت‌ آنلاین) که به واسطهٔ الکترونیکی شدن آن «لازم» بودند؛ یعنی اگر این امکانات را فراهم نمی‌کردند کارشان ناقص بود نه این که خیلی لطف کرده باشند یا خلاقیت به خرج داده باشند که این امکانات را فراهم کنند. این بیزنس، بیزنسی نیست که از بیخ و بن شغل راننده‌های تاکسی را تهدید کند و در تعریف و تمجید از آن بزرگنمایی می‌شود. وقتی که اسنپ و تپسی یا گوگل و اوبر خودروهای بدون راننده را به صورت عمومی عرضه کنند، آن زمان می‌توانیم چنین مقایسه‌هایی کنیم و واقعاً این بیزنس و این تکنولوژی را disruptive بنامیم.&lt;/p&gt;

&lt;p&gt;مسئله‌ای که به عینه دیده‌ام که برای همه مهم‌ترین مزیت تاکسی‌های موبایلی بوده قیمت پایین آن به واسطهٔ تخفیف‌ها است؛ زودگذرترین ویژگی در مسیر طولانی حرکت این استارت‌آپ‌ها؛ مشتری‌ای که با تخفیف آمده، با تخفیف هم &lt;a href=&quot;http://mrshabanali.com/%D8%AA%D9%BE%D8%B3%DB%8C-%DB%8C%D8%A7-%D8%A7%D8%B3%D9%86%D9%BE%D8%9F-%D9%85%D8%B3%D8%A6%D9%84%D9%87-%D8%A7%DB%8C%D9%86-%D9%86%DB%8C%D8%B3%D8%AA-%D8%A8%DB%8C%E2%80%8C%D9%88%D9%81%D8%A7%DB%8C%DB%8C/&quot;&gt;می‌رود&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;آپدیت&quot;&gt;آپدیت:&lt;/h3&gt;
&lt;p&gt;یک &lt;a href=&quot;https://twitter.com/omid_keshtkar/status/833764306281979906&quot;&gt;مجموعه ۱۴ تایی توییت&lt;/a&gt; مرتبط با این پدیده: با تشکر از &lt;a href=&quot;https://twitter.com/behdad_k/status/835566930580934660&quot;&gt;بهداد&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;پدیده‌ی اوبریزاسیون، اتفاقی جدید در حوزه‌ی اقتصاده که‌ تقریبا تمام کشورهای پیشرفته و در حال پیشرفت رو درگیر کرده. شاید بشه Uberisation رو این‌طور معنی کرد: کسب‌وکار برقراری ارتباط مستقیم میان مشتری و کارفرما به‌وسیله‌ی ابزارهای نوین تکنولوژیک. اوبریزاسیون گرچه از اسم تاکسی اوبر گرفته شده اما در حوزه‌های متنوعی از خدمات فعالیت داره. مثل سفارش غذا، تعمیرات، سیستم‌های هدیه و... اوبریزاسیون باعث دسترسی آسان‌تر، متنوع‌تر و احتمالا ارزان‌تر مصرف‌کننده به خدمات میشه و معمولا امکانات بهتری از روش‌های سنتی فراهم می‌شه. اونچه باعث اعتراض به اوبریزاسیون میشه در واقع حذف شرکت‌ها و دلال‌های سنتی و جایگزینی‌اشون با شرکت‌های بزرگ و خدمات‌رسان‌های جدیده، اما در عین‌حال اوبریزاسیون شکل نوینی از استثمار طبقه‌ی کارگره. در فرانسه رانندگان تاکسی و یا کسانی که‌ کار حمل غذا انجام می‌دن برای شاغل شدن در اوبر، دلیورو یا سیستم‌های مشابه باید خودشون رو به عنوان شرکت‌های تک‌نفره ثبت کنند. این یعنی شرکت مادر هیچ‌گونه تعهدی در قبال کارگر نخواهد داشت. یعنی کار بدون بازنشستگی، بدون سابقه و بدون حق استفاده از حقوق بیکاری. در عین‌حال این شرکت‌ها به‌صورت بی‌رویه نیرو جذب می‌کنند.‌ برای یک پست چندین آدم فعال وجود داره و به‌مرور درآمد شاغلین کم و کم‌تر خواهد شد. این در حالیه که شرکت مادر حاشیه‌ی سود مطمئن خودش رو داره و هزینه‌های کارگرها رو از مصرف‌کننده می‌گیره. به این معنی که شرکت‌ بدون هزینه‌کرد مستقیم، به‌عنوان واسطه تنها سود برداشت می‌کنه. یک شکل تمیز و مدرن از دلالی. همین‌طور به علت عدم نظارت کافی دولتی، همیشه امکان وقوع اتفاقات غیرمنتظره در خدمات این سیستم‌ها وجود داره. به زبان ساده اوبریزاسیون گرچه از جهات بسیاری مدرن، کارراه‌انداز و به نفع مصرف‌کننده است، اما در عین‌حال آسیب‌های جدی برای کارگرها در پی خواهد داشت. چوب دو سر طلای دلالی!&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&quot;منابع-چند-لینک-مفید&quot;&gt;منابع + چند لینک‌ مفید&lt;/h3&gt;
&lt;p style=&quot;direction: ltr;&quot;&gt;[http://thehustle.co/what-people-were-saying-about-uber-when-it-was-just-a-startup](http://thehustle.co/what-people-were-saying-about-uber-when-it-was-just-a-startup)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://fusion.net/story/157377/uber-at-the-beginning/](http://fusion.net/story/157377/uber-at-the-beginning/)&lt;/p&gt;
&lt;p&gt;https://medium.com/uber-under-the-hood/uber-before-uber-35730f2bfcc9#.ckosw3bf8&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[https://uberexpansion.com/flashback-original-uber-blog/](https://uberexpansion.com/flashback-original-uber-blog/)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://www.businessinsider.com/i-drove-for-uber-for-a-week-heres-what-its-really-like-2015-2?international=true&amp;amp;r=US&amp;amp;IR=T](http://www.businessinsider.com/i-drove-for-uber-for-a-week-heres-what-its-really-like-2015-2?international=true&amp;amp;r=US&amp;amp;IR=T)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://www.forbes.com/sites/tarunwadhwa/2015/07/27/why-i-still-ride-cabs-in-san-francisco/#2954bb911315](http://www.forbes.com/sites/tarunwadhwa/2015/07/27/why-i-still-ride-cabs-in-san-francisco/#2954bb911315)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://www.eghtesadonline.com/%D8%A8%D8%AE%D8%B4-%D8%B9%D9%85%D9%88%D9%85%DB%8C-30/167902-%D8%A7%D8%B3%D9%86%D9%BE](http://www.eghtesadonline.com/%D8%A8%D8%AE%D8%B4-%D8%B9%D9%85%D9%88%D9%85%DB%8C-30/167902-%D8%A7%D8%B3%D9%86%D9%BE)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://click.ir/1395/10/12/reviewing-snap-social-threats-in-iran/](http://click.ir/1395/10/12/reviewing-snap-social-threats-in-iran/)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://www.irna.ir/fa/News/82409005/](http://www.irna.ir/fa/News/82409005/)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;[http://vaghtiran.ir/fa/news/1984/%D8%A7%D8%B3%D9%86%D9%BE-%D9%88-%D8%AA%D9%BE%D8%B3%DB%8C-%D9%85%D8%B4%D8%AA%D8%B1%DB%8C-%D8%B1%D8%A7%D8%B6%DB%8C-%D8%B1%D9%82%DB%8C%D8%A8-%D9%86%D8%A7%D8%B1%D8%A7%D8%B6%DB%8C](http://vaghtiran.ir/fa/news/1984/%D8%A7%D8%B3%D9%86%D9%BE-%D9%88-%D8%AA%D9%BE%D8%B3%DB%8C-%D9%85%D8%B4%D8%AA%D8%B1%DB%8C-%D8%B1%D8%A7%D8%B6%DB%8C-%D8%B1%D9%82%DB%8C%D8%A8-%D9%86%D8%A7%D8%B1%D8%A7%D8%B6%DB%8C)&lt;/p&gt;</content><author><name>mashhadimj</name></author><category term="Bussiness &amp;amp; Startups" /><category term="Social" /><summary type="html">به روز رسانی چند سال از انتشار این مطلب می‌گذرد و در طی این سال‌ها بعضی مشکلاتی که اشاره شده رفع شدند، بعضی مشکلات و مسائل جدید به وجود آمده‌اند، اگر الان این مطلب را مطالعه می‌کنید به قول انگلیسی زبان‌ها take it with a grain of salt!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mjafar.me/assets/images/2017/02/C5gg3wMWYAA0M0W.jpg" /></entry><entry><title type="html">مختصری بر نام‌گذاری ستاره‌ها</title><link href="https://mjafar.me/blog/2017/02/how-stars-are-named/" rel="alternate" type="text/html" title="مختصری بر نام‌گذاری ستاره‌ها" /><published>2017-02-04T23:34:23+00:00</published><updated>2017-02-04T23:34:23+00:00</updated><id>https://mjafar.me/blog/2017/02/how-stars-are-named</id><content type="html" xml:base="https://mjafar.me/blog/2017/02/how-stars-are-named/">&lt;figure&gt;&lt;a href=&quot;https://astronomynow.com/2015/04/28/iau-contest-enables-public-to-name-47-exoplanets-and-stars/&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;http://astronomynow.com/wp-content/uploads/2015/04/iau1505a_1280x640.jpg&quot; border=&quot;0&quot; /&gt;
&lt;/a&gt;&lt;figcaption&gt;Image credit: IAU/ESO/S. Brunier&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;نامهای-عربی-یونانی&quot;&gt;نام‌های عربی-یونانی&lt;/h2&gt;
&lt;p&gt;ستاره‌های پرنور آسمان، به خصوص در نیم‌کرهٔ شمالی، از قدیم مورد توجه ستاره شناسان بودند و اغلب اسم‌های خاص خودشان را دارند. به عنوان مثال می‌توان به ستارهٔ &lt;a href=&quot;https://en.wikipedia.org/wiki/Sirius&quot; target=&quot;_blank&quot;&gt;شباهنگ&lt;/a&gt; (Sirius، شِعرای یمانی) که پرنورترین ستارهٔ آسمان است، &lt;a href=&quot;https://en.wikipedia.org/wiki/Polaris&quot;&gt;ستارهٔ شمالی&lt;/a&gt;(Polaris، ستارهٔ قطبی)، &lt;a href=&quot;https://en.wikipedia.org/wiki/Vega&quot;&gt;نسر واقع&lt;/a&gt;(Vega، کرکس نشسته)، &lt;a href=&quot;https://en.wikipedia.org/wiki/Deneb&quot;&gt;ذنب&lt;/a&gt;(Deneb، ردف) و &lt;a href=&quot;https://en.wikipedia.org/wiki/Aldebaran&quot;&gt;الدِبَران&lt;/a&gt;(Aldebaran) اشاره کرد. اغلب این نام‌ها به زبان‌های عربی یا یونانی هستند و &lt;a href=&quot;https://www.iau.org/about/&quot;&gt;انجمن بین‌المللی نجوم&lt;/a&gt; این اسامی را به صورت رسمی ثبت کرده است و منجمین سراسر جهان از این اسامی استفاده می‌کنند. در آن زمان کسی برای ستاره‌های کم‌نورتر آسمان اسمی انتخاب نکرد لذا برای مطالعهٔ آن‌ها به روشی برای نام‌گذاری نیاز بود.&lt;/p&gt;

&lt;h2 id=&quot;نامگذاری-بایِر&quot;&gt;نام‌گذاری بایِر&lt;/h2&gt;
&lt;p&gt;در سال ۱۶۰۳ میلادی، بایِر آلمانی یک سیستم نام‌گذاری جدید پیشنهاد داد. در سیستم بایر ستاره‌های هر صورت فلکی به ترتیب درخشندگی مرتب می‌شوند و به ترتیب حروف الفبای یونانی به آن‌ها &lt;a href=&quot;http://www.skyviewcafe.com/bayer_flamsteed.html&quot;&gt;نسبت داده می‌شود&lt;/a&gt;. مثلاً ستارهٔ &lt;a href=&quot;http://www.space.com/18090-alpha-centauri-nearest-star-system.html&quot;&gt;آلفا-قنطورِس&lt;/a&gt; (نزدیک‌ترین ستاره به منظومهٔ شمسی - Alpha Centauri) پرنورترین ستاره در صورت فلکی قنطورس است. البته این ترتیب زیاد هم رعایت نمی‌شود! مثلا ستاره‌های دب اکبر به ترتیب مکانشان اسم‌گذاری شدند و اگر آن‌ها را به ترتیب درخشندگی مرتب کنیم ترتیب کاملا متفاوتی به دست می‌آید.&lt;/p&gt;

&lt;h2 id=&quot;نامگذاری-فلامستید&quot;&gt;نام‌گذاری فلامستید&lt;/h2&gt;
&lt;p&gt;الفبای یونانی ۲۴ حرف بیشتر ندارد، مقایسهٔ میزان درخشندگی ستاره‌های کم‌نور هم نسبت به پرنورترها مشکل‌تر است. جان فلامستید انگلیسی سیستم نام‌گذاری جدید &lt;a href=&quot;http://astronomy.stackexchange.com/a/6117&quot;&gt;پیشنهاد داد&lt;/a&gt; و ستاره‌های ۵۵ صورت فلکی را با روش جدیدش نام‌گذاری کرد. در این روش به هر ستارهٔ هر صورت فلکی از غرب به شرق به ترتیب اعداد از ۱ به بالا نسبت داده می‌شوند.&lt;/p&gt;

&lt;p&gt;امروزه برای ستاره‌هایی که اسم خاص قدیمی یا اسم با سیستم بایر دارند از همان نام‌های اصلی و برای سایر ستاره‌ها از اسم فلامستید استفاده می‌شود. مثلاً پرنورترین ستارهٔ صورت فلکی مرغابی سه نامِ ذنب، آلفا-سیگنوس (بایر) و ۵۰-سیگنوس (فلامستید) را دارد اما اغلب از اسم خاص آن، Deneb استفاده می‌شود.&lt;/p&gt;
&lt;h2 id=&quot;نامگذاری-متغیرها&quot;&gt;نام‌گذاری متغیرها&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://gail.bischoff.angelfire.com/auit/variable.html&quot;&gt;ستاره‌های متغیر&lt;/a&gt;، ستاره‌هایی که در طول زمان درخششان تغییر می‌کند از اهمیت بالایی برای منجمین برخوردار هستند، تا این حد که سیستم نام‌گذاری مختص خودشان را دارند. نام گذاری ستاره‌های متغیر به ترتیب زمان کشف شدنشان است؛ اولین ستارهٔ متغیری که در هر صورت فلکی کشف می‌شود اگر از قبل اسم نداشته باشد با حرف R نام گذاری می‌شود و به همین ترتیب تا Z پیش می‌روند. نام متغیر بعدی RR گذاشته می‌شود (RR Lyrae در صورت فلکی شلیاق یک مثال معروف بین منجمین است) و بعدی RS و به همین ترتیب تا ZZ. پس از ZZ از AA شروع می‌کنند تا به QZ برسند. یک ستارهٔ مشهور با این نام‌گذاری «وی وای سگ بزرگ» (&lt;a href=&quot;http://www.universetoday.com/39472/vy-canis-majoris/&quot;&gt;VY Canis Majoris&lt;/a&gt;) است که بزرگترین ستارهٔ راه شیری است اندازهٔ زمین در مقابل این ستاره مانند اندازهٔ یک کره با قطر یک متر در مقابل کل کرهٔ زمین است. تا QZ، تعداد ۳۳۴ ستارهٔ متغیر از هر صورت فلکی نام‌گذاری می‌شوند. اگر بازهم متغیر جدیدی کشف شود از ترکیب حرف V با اعداد استفاده می‌شود، لذا نام ستارهٔ بعدی V335 خواهد بود.&lt;/p&gt;
&lt;h2 id=&quot;دردسر-تلسکوپها&quot;&gt;دردسر تلسکوپ‌ها&lt;/h2&gt;
&lt;p&gt;پس از استفادهٔ منجمین از تلسکوپ تعداد قابل توجهی ستاره که قبلاً با چشم غیرمسلح قابل دیدن نبودند کشف شدند که نامی نداشتند. سیستم فلامستید هم جوابگوی این تعداد بی‌شمار ستاره نبود، از این رو منجمین از این فرصت استفاده کردند که کشفیاتشان را به اسم خودشان ثبت کنند! عملاً هیچ سیستمی حاکم بر نام‌گذاری ستاره‌های جدید کشف شده نبود. بعضی ستاره‌ها چند بار اسم‌گذاری شدند، مثلا ستارهٔ Lalande 21185 به اسم‌های BD+36 2147، Gliese 411، و HD 95735 هم شناخته می‌شود!&lt;/p&gt;

&lt;p&gt;درحال حاضر بهترین راه موجود برای اشارهٔ مستقیم به یک ستاره بدون ایجاد ابهام استفاده از مختصات آن در کرهٔ سماوی است.&lt;/p&gt;</content><author><name>mashhadimj</name></author><category term="Astronomy" /><summary type="html">Image credit: IAU/ESO/S. Brunier</summary></entry></feed>